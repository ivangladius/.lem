-> request: initialize {
  "processId": 7466,
  "clientInfo": {
    "name": "lem"
  },
  "rootUri": "file:///home/max/uni/golang/socket/",
  "capabilities": {
    "workspace": {},
    "textDocument": {
      "synchronization": {
        "didSave": true
      },
      "completion": {
        "completionItem": {
          "snippetSupport": null
        },
        "contextSupport": true
      },
      "hover": {},
      "signatureHelp": {
        "signatureInformation": {
          "documentationFormat": [
            "plaintext",
            "markdown"
          ],
          "parameterInformation": {
            "labelOffsetSupport": true
          },
          "activeParameterSupport": true
        },
        "contextSupport": true
      },
      "definition": {
        "linkSupport": null
      },
      "typeDefinition": {
        "linkSupport": null
      },
      "implementation": {
        "linkSupport": null
      },
      "references": {},
      "documentSymbol": {
        "hierarchicalDocumentSymbolSupport": true
      },
      "codeAction": {},
      "formatting": {},
      "rangeFormatting": {},
      "onTypeFormatting": {},
      "rename": {},
      "publishDiagnostics": {
        "relatedInformation": true
      }
    }
  },
  "initializationOptions": {
    "completeUnimported": true,
    "matcher": "fuzzy"
  },
  "trace": "off",
  "workspaceFolders": null
}
<- response: {
  "capabilities": {
    "textDocumentSync": {
      "openClose": true,
      "change": 2,
      "save": {}
    },
    "completionProvider": {
      "triggerCharacters": [
        "."
      ]
    },
    "hoverProvider": true,
    "signatureHelpProvider": {
      "triggerCharacters": [
        "(",
        ","
      ]
    },
    "definitionProvider": true,
    "typeDefinitionProvider": true,
    "implementationProvider": true,
    "referencesProvider": true,
    "documentHighlightProvider": true,
    "documentSymbolProvider": true,
    "codeActionProvider": true,
    "codeLensProvider": {},
    "documentLinkProvider": {},
    "workspaceSymbolProvider": true,
    "documentFormattingProvider": true,
    "renameProvider": true,
    "foldingRangeProvider": true,
    "selectionRangeProvider": true,
    "executeCommandProvider": {
      "commands": [
        "gopls.add_dependency",
        "gopls.add_import",
        "gopls.apply_fix",
        "gopls.check_upgrades",
        "gopls.edit_go_directive",
        "gopls.fetch_vulncheck_result",
        "gopls.gc_details",
        "gopls.generate",
        "gopls.go_get_package",
        "gopls.list_imports",
        "gopls.list_known_packages",
        "gopls.mem_stats",
        "gopls.regenerate_cgo",
        "gopls.remove_dependency",
        "gopls.reset_go_mod_diagnostics",
        "gopls.run_go_work_command",
        "gopls.run_govulncheck",
        "gopls.run_tests",
        "gopls.start_debugging",
        "gopls.start_profile",
        "gopls.stop_profile",
        "gopls.test",
        "gopls.tidy",
        "gopls.toggle_gc_details",
        "gopls.update_go_sum",
        "gopls.upgrade_dependency",
        "gopls.vendor",
        "gopls.workspace_stats"
      ]
    },
    "callHierarchyProvider": true,
    "semanticTokensProvider": {
      "legend": {
        "tokenTypes": [],
        "tokenModifiers": []
      },
      "range": true,
      "full": true
    },
    "inlayHintProvider": {},
    "workspace": {
      "workspaceFolders": {
        "supported": true,
        "changeNotifications": "workspace/didChangeWorkspaceFolders"
      }
    }
  },
  "serverInfo": {
    "name": "gopls",
    "version": "{\"GoVersion\":\"go1.21.0\",\"Path\":\"golang.org/x/tools/gopls\",\"Main\":{\"Path\":\"golang.org/x/tools/gopls\",\"Version\":\"(devel)\",\"Sum\":\"\",\"Replace\":null},\"Deps\":[{\"Path\":\"github.com/BurntSushi/toml\",\"Version\":\"v1.2.1\",\"Sum\":\"h1:9F2/+DoOYIOksmaJFPw1tGFy1eDnIJXg+UHjuD8lTak=\",\"Replace\":null},{\"Path\":\"github.com/google/go-cmp\",\"Version\":\"v0.5.9\",\"Sum\":\"h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\",\"Replace\":null},{\"Path\":\"github.com/sergi/go-diff\",\"Version\":\"v1.1.0\",\"Sum\":\"h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=\",\"Replace\":null},{\"Path\":\"golang.org/x/exp\",\"Version\":\"v0.0.0-20220722155223-a9213eeb770e\",\"Sum\":\"h1:+WEEuIdZHnUeJJmEUjyYC2gfUMj69yZXw17EnHg/otA=\",\"Replace\":null},{\"Path\":\"golang.org/x/exp/typeparams\",\"Version\":\"v0.0.0-20221212164502-fae10dda9338\",\"Sum\":\"h1:2O2DON6y3XMJiQRAS1UWU+54aec2uopH3x7MAiqGW6Y=\",\"Replace\":null},{\"Path\":\"golang.org/x/mod\",\"Version\":\"v0.12.0\",\"Sum\":\"h1:rmsUpXtvNzj340zd98LZ4KntptpfRHwpFOHG188oHXc=\",\"Replace\":null},{\"Path\":\"golang.org/x/sync\",\"Version\":\"v0.3.0\",\"Sum\":\"h1:ftCYgMx6zT/asHUrPw8BLLscYtGznsLAnjq5RH9P66E=\",\"Replace\":null},{\"Path\":\"golang.org/x/sys\",\"Version\":\"v0.10.0\",\"Sum\":\"h1:SqMFp9UcQJZa+pmYuAKjd9xq1f0j5rLcDIk0mj4qAsA=\",\"Replace\":null},{\"Path\":\"golang.org/x/text\",\"Version\":\"v0.11.0\",\"Sum\":\"h1:LAntKIrcmeSKERyiOh0XMV39LXS8IE9UL2yP7+f5ij4=\",\"Replace\":null},{\"Path\":\"golang.org/x/tools\",\"Version\":\"v0.11.2-0.20230810185051-cc6b5804b8cf\",\"Sum\":\"h1:Oush7UwPamr2/iNeNFBuNFj89YyHn0YY69EKDdvANnk=\",\"Replace\":null},{\"Path\":\"golang.org/x/vuln\",\"Version\":\"v0.0.0-20230110180137-6ad3e3d07815\",\"Sum\":\"h1:A9kONVi4+AnuOr1dopsibH6hLi1Huy54cbeJxnq4vmU=\",\"Replace\":null},{\"Path\":\"honnef.co/go/tools\",\"Version\":\"v0.4.2\",\"Sum\":\"h1:6qXr+R5w+ktL5UkwEbPp+fEvfyoMPche6GkOpGHZcLc=\",\"Replace\":null},{\"Path\":\"mvdan.cc/gofumpt\",\"Version\":\"v0.4.0\",\"Sum\":\"h1:JVf4NN1mIpHogBj7ABpgOyZc65/UUOkKQFkoURsz4MM=\",\"Replace\":null},{\"Path\":\"mvdan.cc/xurls/v2\",\"Version\":\"v2.4.0\",\"Sum\":\"h1:tzxjVAj+wSBmDcF6zBB7/myTy3gX9xvi8Tyr28AuQgc=\",\"Replace\":null}],\"Settings\":[{\"Key\":\"-buildmode\",\"Value\":\"pie\"},{\"Key\":\"-compiler\",\"Value\":\"gc\"},{\"Key\":\"-ldflags\",\"Value\":\"-compressdwarf=false     -linkmode external     -extldflags -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now\"},{\"Key\":\"DefaultGODEBUG\",\"Value\":\"panicnil=1\"},{\"Key\":\"CGO_ENABLED\",\"Value\":\"1\"},{\"Key\":\"CGO_CFLAGS\",\"Value\":\"-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/gopls/src=/usr/src/debug/gopls\"},{\"Key\":\"CGO_CPPFLAGS\",\"Value\":\"\"},{\"Key\":\"CGO_CXXFLAGS\",\"Value\":\"-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -Wp,-D_GLIBCXX_ASSERTIONS -g -ffile-prefix-map=/build/gopls/src=/usr/src/debug/gopls\"},{\"Key\":\"CGO_LDFLAGS\",\"Value\":\"\"},{\"Key\":\"GOARCH\",\"Value\":\"amd64\"},{\"Key\":\"GOOS\",\"Value\":\"linux\"},{\"Key\":\"GOAMD64\",\"Value\":\"v1\"}],\"Version\":\"v0.13.2\"}"
  }
}
notify: initialized {}
<- request: window/showMessage {
  "type": 4,
  "message": "Loading packages..."
}
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
    "languageId": "go",
    "version": 0,
    "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
  }
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:39:35 go info for /home/max/uni/golang/socket/\n(go dir /home/max/uni/golang/socket/)\n(go version go version go1.21.3 linux/amd64)\n(valid build configuration = false)\n(build flags: [])\n(selected go env: [GO111MODULE=, GOCACHE=/home/max/.cache/go-build, GOFLAGS=, GOMODCACHE=/home/max/go/pkg/mod, GOPATH=/home/max/go, GOPRIVATE=, GOROOT=/usr/lib/go, GOWORK=])\n\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:39:35 go/packages.Load #1\n\tsnapshot=0\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./ builtin]\n\tpackages=2\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:39:35 go/packages.Load #1: updating metadata for 60 packages\n"
}
<- request: window/showMessage {
  "type": 3,
  "message": "Finished loading packages."
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 1,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 9,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
    "languageId": "go",
    "version": 0,
    "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
  }
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 4,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
    "languageId": "go",
    "version": 0,
    "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
  }
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
    "languageId": "go",
    "version": 0,
    "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
  }
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 7,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 5
        },
        "end": {
          "line": 10,
          "character": 6
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 6
        },
        "end": {
          "line": 10,
          "character": 6
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found err"
    }
  ]
}
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
    "languageId": "go",
    "version": 1,
    "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
  }
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 6
        },
        "end": {
          "line": 10,
          "character": 6
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found err"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 8
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 7
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 5
        },
        "end": {
          "line": 10,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": ","
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 6
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 16
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 14
      },
      "end": {
        "line": 10,
        "character": 17
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 9,
    "character": 4
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 9,
    "character": 3
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 8,
    "character": 10
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 8,
        "character": 5
      },
      "end": {
        "line": 8,
        "character": 11
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 43,
        "character": 1
      },
      "end": {
        "line": 43,
        "character": 7
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 1
      },
      "end": {
        "line": 10,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 23,
        "character": 22
      },
      "end": {
        "line": 23,
        "character": 26
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 32,
        "character": 7
      },
      "end": {
        "line": 32,
        "character": 11
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 17
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 10,
        "character": 14
      },
      "end": {
        "line": 10,
        "character": 17
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 19
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 22
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": -1,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 19
        },
        "end": {
          "line": 10,
          "character": 20
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": -1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 10,
          "character": 18
        },
        "end": {
          "line": 10,
          "character": 21
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: net.Dal"
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 19
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 21
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 9,
    "character": 19
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": -1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 10,
          "character": 18
        },
        "end": {
          "line": 10,
          "character": 21
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: net.Dal"
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 19
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 21
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 8,
    "character": 14
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 19
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 21
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 9,
    "character": 19
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 19
        },
        "end": {
          "line": 10,
          "character": 19
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 20
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 22
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 9,
    "character": 20
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": -1,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 20
        },
        "end": {
          "line": 10,
          "character": 21
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": -1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 10,
          "character": 18
        },
        "end": {
          "line": 10,
          "character": 21
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: net.Dil"
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 20
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 21
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 9,
    "character": 20
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": -1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 10,
          "character": 18
        },
        "end": {
          "line": 10,
          "character": 21
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: net.Dil"
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 20
        },
        "end": {
          "line": 10,
          "character": 20
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 21
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 22
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 21
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 22
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 15
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 21
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 22
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": -1,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 47
        },
        "end": {
          "line": 10,
          "character": 47
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 1,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": -1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 1
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 2,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 2,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: n"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 3,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 2
        },
        "end": {
          "line": 11,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "e"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 3,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: ne"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 3
        },
        "end": {
          "line": 11,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 4
        }
      },
      "severity": 1,
      "code": "InvalidPkgUse",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#InvalidPkgUse"
      },
      "source": "compiler",
      "message": "use of package net not in selector"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 4
        },
        "end": {
          "line": 11,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "."
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 13,
          "character": 0
        },
        "end": {
          "line": 13,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found 'if'"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 5
  }
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Addr",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Addr represents a network end point address.\n\nThe two methods Network and String conventionally return strings that can be passed as the arguments to Dial, but the exact form and meaning of the strings is up to the implementation.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Addr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Addr"
      }
    },
    {
      "label": "AddrError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00001",
      "filterText": "AddrError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "AddrError"
      }
    },
    {
      "label": "Buffers",
      "kind": 7,
      "detail": "[][]byte",
      "documentation": {
        "kind": "markdown",
        "value": "Buffers contains zero or more runs of bytes to write.\n\nOn certain machines, for certain types of connections, this is optimized into an OS-specific batch write operation (such as \"writev\").\n"
      },
      "sortText": "00002",
      "filterText": "Buffers",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Buffers"
      }
    },
    {
      "label": "CIDRMask",
      "kind": 3,
      "detail": "func(ones int, bits int) net.IPMask",
      "documentation": {
        "kind": "markdown",
        "value": "CIDRMask returns an IPMask consisting of 'ones' 1 bits followed by 0s up to a total length of 'bits' bits. For a mask of this form, CIDRMask is the inverse of IPMask.Size.\n"
      },
      "sortText": "00003",
      "filterText": "CIDRMask",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "CIDRMask"
      }
    },
    {
      "label": "Conn",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Conn is a generic stream-oriented network connection.\n\nMultiple goroutines may invoke methods on a Conn simultaneously.\n"
      },
      "sortText": "00004",
      "filterText": "Conn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Conn"
      }
    },
    {
      "label": "DNSConfigError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "DNSConfigError represents an error reading the machine's DNS configuration. (No longer used; kept for compatibility.)\n"
      },
      "sortText": "00005",
      "filterText": "DNSConfigError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DNSConfigError"
      }
    },
    {
      "label": "DNSError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "DNSError represents a DNS lookup error.\n"
      },
      "sortText": "00006",
      "filterText": "DNSError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DNSError"
      }
    },
    {
      "label": "DefaultResolver",
      "kind": 6,
      "detail": "*net.Resolver",
      "documentation": {
        "kind": "markdown",
        "value": "DefaultResolver is the resolver used by the package-level Lookup functions and by Dialers without a specified Resolver.\n"
      },
      "sortText": "00007",
      "filterText": "DefaultResolver",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DefaultResolver"
      }
    },
    {
      "label": "Dial",
      "kind": 3,
      "detail": "func(network string, address string) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Dial connects to the address on the named network.\n\nKnown networks are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".\n\nFor TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"\\[2001:db8::1]:80\" or \"\\[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007. The functions JoinHostPort and SplitHostPort manipulate a pair of host and port in this form. When using TCP, and the host resolves to multiple IP addresses, Dial will try each IP address in order until one succeeds.\n\nExamples:\n\n\tDial(\"tcp\", \"golang.org:http\")\n\tDial(\"tcp\", \"192.0.2.1:http\")\n\tDial(\"tcp\", \"198.51.100.1:80\")\n\tDial(\"udp\", \"[2001:db8::1]:domain\")\n\tDial(\"udp\", \"[fe80::1%lo0]:53\")\n\tDial(\"tcp\", \":80\")\n\nFor IP networks, the network must be \"ip\", \"ip4\" or \"ip6\" followed by a colon and a literal protocol number or a protocol name, and the address has the form \"host\". The host must be a literal IP address or a literal IPv6 address with zone. It depends on each operating system how the operating system behaves with a non-well known protocol number such as \"0\" or \"255\".\n\nExamples:\n\n\tDial(\"ip4:1\", \"192.0.2.1\")\n\tDial(\"ip6:ipv6-icmp\", \"2001:db8::1\")\n\tDial(\"ip6:58\", \"fe80::1%lo0\")\n\nFor TCP, UDP and IP networks, if the host is empty or a literal unspecified IP address, as in \":80\", \"0.0.0.0:80\" or \"\\[::]:80\" for TCP and UDP, \"\", \"0.0.0.0\" or \"::\" for IP, the local system is assumed.\n\nFor Unix networks, the address must be a file system path.\n"
      },
      "sortText": "00008",
      "filterText": "Dial",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Dial"
      }
    },
    {
      "label": "DialIP",
      "kind": 3,
      "detail": "func(network string, laddr *net.IPAddr, raddr *net.IPAddr) (*net.IPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialIP acts like Dial for IP networks.\n\nThe network must be an IP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00009",
      "filterText": "DialIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialIP"
      }
    },
    {
      "label": "DialTCP",
      "kind": 3,
      "detail": "func(network string, laddr *net.TCPAddr, raddr *net.TCPAddr) (*net.TCPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialTCP acts like Dial for TCP networks.\n\nThe network must be a TCP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00010",
      "filterText": "DialTCP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialTCP"
      }
    },
    {
      "label": "DialTimeout",
      "kind": 3,
      "detail": "func(network string, address string, timeout time.Duration) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialTimeout acts like Dial but takes a timeout.\n\nThe timeout includes name resolution, if required. When using TCP, and the host in the address parameter resolves to multiple IP addresses, the timeout is spread over each consecutive dial, such that each is given an appropriate fraction of the time to connect.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00011",
      "filterText": "DialTimeout",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialTimeout"
      }
    },
    {
      "label": "DialUDP",
      "kind": 3,
      "detail": "func(network string, laddr *net.UDPAddr, raddr *net.UDPAddr) (*net.UDPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialUDP acts like Dial for UDP networks.\n\nThe network must be a UDP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00012",
      "filterText": "DialUDP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialUDP"
      }
    },
    {
      "label": "DialUnix",
      "kind": 3,
      "detail": "func(network string, laddr *net.UnixAddr, raddr *net.UnixAddr) (*net.UnixConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialUnix acts like Dial for Unix networks.\n\nThe network must be a Unix network name; see func Dial for details.\n\nIf laddr is non-nil, it is used as the local address for the connection.\n"
      },
      "sortText": "00013",
      "filterText": "DialUnix",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialUnix"
      }
    },
    {
      "label": "Dialer",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A Dialer contains options for connecting to an address.\n\nThe zero value for each field is equivalent to dialing without that option. Dialing with the zero value of Dialer is therefore equivalent to just calling the Dial function.\n\nIt is safe to call Dialer's methods concurrently.\n"
      },
      "sortText": "00014",
      "filterText": "Dialer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Dialer"
      }
    },
    {
      "label": "ErrClosed",
      "kind": 6,
      "detail": "error",
      "documentation": {
        "kind": "markdown",
        "value": "ErrClosed is the error returned by an I/O call on a network connection that has already been closed, or that is closed by another goroutine before the I/O is completed. This may be wrapped in another error, and should normally be tested using errors.Is(err, net.ErrClosed).\n"
      },
      "sortText": "00015",
      "filterText": "ErrClosed",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ErrClosed"
      }
    },
    {
      "label": "ErrWriteToConnected",
      "kind": 6,
      "detail": "error",
      "documentation": {
        "kind": "markdown",
        "value": "Various errors contained in OpError.\n"
      },
      "sortText": "00016",
      "filterText": "ErrWriteToConnected",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ErrWriteToConnected"
      }
    },
    {
      "label": "Error",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An Error represents a network error.\n"
      },
      "sortText": "00017",
      "filterText": "Error",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Error"
      }
    },
    {
      "label": "FileConn",
      "kind": 3,
      "detail": "func(f *os.File) (c net.Conn, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "FileConn returns a copy of the network connection corresponding to the open file f. It is the caller's responsibility to close f when finished. Closing c does not affect f, and closing f does not affect c.\n"
      },
      "sortText": "00018",
      "filterText": "FileConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FileConn"
      }
    },
    {
      "label": "FileListener",
      "kind": 3,
      "detail": "func(f *os.File) (ln net.Listener, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "FileListener returns a copy of the network listener corresponding to the open file f. It is the caller's responsibility to close ln when finished. Closing ln does not affect f, and closing f does not affect ln.\n"
      },
      "sortText": "00019",
      "filterText": "FileListener",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FileListener"
      }
    },
    {
      "label": "FilePacketConn",
      "kind": 3,
      "detail": "func(f *os.File) (c net.PacketConn, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "FilePacketConn returns a copy of the packet network connection corresponding to the open file f. It is the caller's responsibility to close f when finished. Closing c does not affect f, and closing f does not affect c.\n"
      },
      "sortText": "00020",
      "filterText": "FilePacketConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FilePacketConn"
      }
    },
    {
      "label": "FlagBroadcast",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface supports broadcast access capability\n"
      },
      "sortText": "00021",
      "filterText": "FlagBroadcast",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagBroadcast"
      }
    },
    {
      "label": "FlagLoopback",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface is a loopback interface\n"
      },
      "sortText": "00022",
      "filterText": "FlagLoopback",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagLoopback"
      }
    },
    {
      "label": "FlagMulticast",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface supports multicast access capability\n"
      },
      "sortText": "00023",
      "filterText": "FlagMulticast",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagMulticast"
      }
    },
    {
      "label": "FlagPointToPoint",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface belongs to a point-to-point link\n"
      },
      "sortText": "00024",
      "filterText": "FlagPointToPoint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagPointToPoint"
      }
    },
    {
      "label": "FlagRunning",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface is in running state\n"
      },
      "sortText": "00025",
      "filterText": "FlagRunning",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagRunning"
      }
    },
    {
      "label": "FlagUp",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface is administratively up\n"
      },
      "sortText": "00026",
      "filterText": "FlagUp",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagUp"
      }
    },
    {
      "label": "Flags",
      "kind": 7,
      "detail": "uint",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00027",
      "filterText": "Flags",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Flags"
      }
    },
    {
      "label": "HardwareAddr",
      "kind": 7,
      "detail": "[]byte",
      "documentation": {
        "kind": "markdown",
        "value": "A HardwareAddr represents a physical hardware address.\n"
      },
      "sortText": "00028",
      "filterText": "HardwareAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "HardwareAddr"
      }
    },
    {
      "label": "IP",
      "kind": 7,
      "detail": "[]byte",
      "documentation": {
        "kind": "markdown",
        "value": "An IP is a single IP address, a slice of bytes. Functions in this package accept either 4-byte (IPv4) or 16-byte (IPv6) slices as input.\n\nNote that in this documentation, referring to an IP address as an IPv4 address or an IPv6 address is a semantic property of the address, not just the length of the byte slice: a 16-byte slice can still be an IPv4 address.\n"
      },
      "sortText": "00029",
      "filterText": "IP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IP"
      }
    },
    {
      "label": "IPAddr",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "IPAddr represents the address of an IP end point.\n"
      },
      "sortText": "00030",
      "filterText": "IPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPAddr"
      }
    },
    {
      "label": "IPConn",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "IPConn is the implementation of the Conn and PacketConn interfaces for IP network connections.\n"
      },
      "sortText": "00031",
      "filterText": "IPConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPConn"
      }
    },
    {
      "label": "IPMask",
      "kind": 7,
      "detail": "[]byte",
      "documentation": {
        "kind": "markdown",
        "value": "An IPMask is a bitmask that can be used to manipulate IP addresses for IP addressing and routing.\n\nSee type IPNet and func ParseCIDR for details.\n"
      },
      "sortText": "00032",
      "filterText": "IPMask",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPMask"
      }
    },
    {
      "label": "IPNet",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An IPNet represents an IP network.\n"
      },
      "sortText": "00033",
      "filterText": "IPNet",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPNet"
      }
    },
    {
      "label": "IPv4",
      "kind": 3,
      "detail": "func(a byte, b byte, c byte, d byte) net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "IPv4 returns the IP address (in 16-byte form) of the IPv4 address a.b.c.d.\n"
      },
      "sortText": "00034",
      "filterText": "IPv4",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4"
      }
    },
    {
      "label": "IPv4Mask",
      "kind": 3,
      "detail": "func(a byte, b byte, c byte, d byte) net.IPMask",
      "documentation": {
        "kind": "markdown",
        "value": "IPv4Mask returns the IP mask (in 4-byte form) of the IPv4 mask a.b.c.d.\n"
      },
      "sortText": "00035",
      "filterText": "IPv4Mask",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4Mask"
      }
    },
    {
      "label": "IPv4allrouter",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv4 addresses\n"
      },
      "sortText": "00036",
      "filterText": "IPv4allrouter",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4allrouter"
      }
    },
    {
      "label": "IPv4allsys",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv4 addresses\n"
      },
      "sortText": "00037",
      "filterText": "IPv4allsys",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4allsys"
      }
    },
    {
      "label": "IPv4bcast",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv4 addresses\n"
      },
      "sortText": "00038",
      "filterText": "IPv4bcast",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4bcast"
      }
    },
    {
      "label": "IPv4len",
      "kind": 21,
      "detail": "int",
      "documentation": {
        "kind": "markdown",
        "value": "IP address lengths (bytes).\n"
      },
      "sortText": "00039",
      "filterText": "IPv4len",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4len"
      }
    },
    {
      "label": "IPv4zero",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv4 addresses\n"
      },
      "sortText": "00040",
      "filterText": "IPv4zero",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4zero"
      }
    },
    {
      "label": "IPv6interfacelocalallnodes",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00041",
      "filterText": "IPv6interfacelocalallnodes",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6interfacelocalallnodes"
      }
    },
    {
      "label": "IPv6len",
      "kind": 21,
      "detail": "int",
      "documentation": {
        "kind": "markdown",
        "value": "IP address lengths (bytes).\n"
      },
      "sortText": "00042",
      "filterText": "IPv6len",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6len"
      }
    },
    {
      "label": "IPv6linklocalallnodes",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00043",
      "filterText": "IPv6linklocalallnodes",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6linklocalallnodes"
      }
    },
    {
      "label": "IPv6linklocalallrouters",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00044",
      "filterText": "IPv6linklocalallrouters",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6linklocalallrouters"
      }
    },
    {
      "label": "IPv6loopback",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00045",
      "filterText": "IPv6loopback",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6loopback"
      }
    },
    {
      "label": "IPv6unspecified",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00046",
      "filterText": "IPv6unspecified",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6unspecified"
      }
    },
    {
      "label": "IPv6zero",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00047",
      "filterText": "IPv6zero",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6zero"
      }
    },
    {
      "label": "Interface",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Interface represents a mapping between network interface name and index. It also represents network interface facility information.\n"
      },
      "sortText": "00048",
      "filterText": "Interface",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Interface"
      }
    },
    {
      "label": "InterfaceAddrs",
      "kind": 3,
      "detail": "func() ([]net.Addr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "InterfaceAddrs returns a list of the system's unicast interface addresses.\n\nThe returned list does not identify the associated interface; use Interfaces and Interface.Addrs for more detail.\n"
      },
      "sortText": "00049",
      "filterText": "InterfaceAddrs",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "InterfaceAddrs"
      }
    },
    {
      "label": "InterfaceByIndex",
      "kind": 3,
      "detail": "func(index int) (*net.Interface, error)",
      "documentation": {
        "kind": "markdown",
        "value": "InterfaceByIndex returns the interface specified by index.\n\nOn Solaris, it returns one of the logical network interfaces sharing the logical data link; for more precision use InterfaceByName.\n"
      },
      "sortText": "00050",
      "filterText": "InterfaceByIndex",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "InterfaceByIndex"
      }
    },
    {
      "label": "InterfaceByName",
      "kind": 3,
      "detail": "func(name string) (*net.Interface, error)",
      "documentation": {
        "kind": "markdown",
        "value": "InterfaceByName returns the interface specified by name.\n"
      },
      "sortText": "00051",
      "filterText": "InterfaceByName",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "InterfaceByName"
      }
    },
    {
      "label": "Interfaces",
      "kind": 3,
      "detail": "func() ([]net.Interface, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Interfaces returns a list of the system's network interfaces.\n"
      },
      "sortText": "00052",
      "filterText": "Interfaces",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Interfaces"
      }
    },
    {
      "label": "InvalidAddrError",
      "kind": 7,
      "detail": "string",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00053",
      "filterText": "InvalidAddrError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "InvalidAddrError"
      }
    },
    {
      "label": "JoinHostPort",
      "kind": 3,
      "detail": "func(host string, port string) string",
      "documentation": {
        "kind": "markdown",
        "value": "JoinHostPort combines host and port into a network address of the form \"host:port\". If host contains a colon, as found in literal IPv6 addresses, then JoinHostPort returns \"\\[host]:port\".\n\nSee func Dial for a description of the host and port parameters.\n"
      },
      "sortText": "00054",
      "filterText": "JoinHostPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "JoinHostPort"
      }
    },
    {
      "label": "Listen",
      "kind": 3,
      "detail": "func(network string, address string) (net.Listener, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Listen announces on the local network address.\n\nThe network must be \"tcp\", \"tcp4\", \"tcp6\", \"unix\" or \"unixpacket\".\n\nFor TCP networks, if the host in the address parameter is empty or a literal unspecified IP address, Listen listens on all available unicast and anycast IP addresses of the local system. To only use IPv4, use network \"tcp4\". The address can use a host name, but this is not recommended, because it will create a listener for at most one of the host's IP addresses. If the port in the address parameter is empty or \"0\", as in \"127.0.0.1:\" or \"\\[::1]:0\", a port number is automatically chosen. The Addr method of Listener can be used to discover the chosen port.\n\nSee func Dial for a description of the network and address parameters.\n\nListen uses context.Background internally; to specify the context, use ListenConfig.Listen.\n"
      },
      "sortText": "00055",
      "filterText": "Listen",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Listen"
      }
    },
    {
      "label": "ListenConfig",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "ListenConfig contains options for listening to an address.\n"
      },
      "sortText": "00056",
      "filterText": "ListenConfig",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenConfig"
      }
    },
    {
      "label": "ListenIP",
      "kind": 3,
      "detail": "func(network string, laddr *net.IPAddr) (*net.IPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenIP acts like ListenPacket for IP networks.\n\nThe network must be an IP network name; see func Dial for details.\n\nIf the IP field of laddr is nil or an unspecified IP address, ListenIP listens on all available IP addresses of the local system except multicast IP addresses.\n"
      },
      "sortText": "00057",
      "filterText": "ListenIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenIP"
      }
    },
    {
      "label": "ListenMulticastUDP",
      "kind": 3,
      "detail": "func(network string, ifi *net.Interface, gaddr *net.UDPAddr) (*net.UDPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenMulticastUDP acts like ListenPacket for UDP networks but takes a group address on a specific network interface.\n\nThe network must be a UDP network name; see func Dial for details.\n\nListenMulticastUDP listens on all available IP addresses of the local system including the group, multicast IP address. If ifi is nil, ListenMulticastUDP uses the system-assigned multicast interface, although this is not recommended because the assignment depends on platforms and sometimes it might require routing configuration. If the Port field of gaddr is 0, a port number is automatically chosen.\n\nListenMulticastUDP is just for convenience of simple, small applications. There are golang.org/x/net/ipv4 and golang.org/x/net/ipv6 packages for general purpose uses.\n\nNote that ListenMulticastUDP will set the IP\\_MULTICAST\\_LOOP socket option to 0 under IPPROTO\\_IP, to disable loopback of multicast packets.\n"
      },
      "sortText": "00058",
      "filterText": "ListenMulticastUDP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenMulticastUDP"
      }
    },
    {
      "label": "ListenPacket",
      "kind": 3,
      "detail": "func(network string, address string) (net.PacketConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenPacket announces on the local network address.\n\nThe network must be \"udp\", \"udp4\", \"udp6\", \"unixgram\", or an IP transport. The IP transports are \"ip\", \"ip4\", or \"ip6\" followed by a colon and a literal protocol number or a protocol name, as in \"ip:1\" or \"ip:icmp\".\n\nFor UDP and IP networks, if the host in the address parameter is empty or a literal unspecified IP address, ListenPacket listens on all available IP addresses of the local system except multicast IP addresses. To only use IPv4, use network \"udp4\" or \"ip4:proto\". The address can use a host name, but this is not recommended, because it will create a listener for at most one of the host's IP addresses. If the port in the address parameter is empty or \"0\", as in \"127.0.0.1:\" or \"\\[::1]:0\", a port number is automatically chosen. The LocalAddr method of PacketConn can be used to discover the chosen port.\n\nSee func Dial for a description of the network and address parameters.\n\nListenPacket uses context.Background internally; to specify the context, use ListenConfig.ListenPacket.\n"
      },
      "sortText": "00059",
      "filterText": "ListenPacket",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenPacket"
      }
    },
    {
      "label": "ListenTCP",
      "kind": 3,
      "detail": "func(network string, laddr *net.TCPAddr) (*net.TCPListener, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenTCP acts like Listen for TCP networks.\n\nThe network must be a TCP network name; see func Dial for details.\n\nIf the IP field of laddr is nil or an unspecified IP address, ListenTCP listens on all available unicast and anycast IP addresses of the local system. If the Port field of laddr is 0, a port number is automatically chosen.\n"
      },
      "sortText": "00060",
      "filterText": "ListenTCP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenTCP"
      }
    },
    {
      "label": "ListenUDP",
      "kind": 3,
      "detail": "func(network string, laddr *net.UDPAddr) (*net.UDPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenUDP acts like ListenPacket for UDP networks.\n\nThe network must be a UDP network name; see func Dial for details.\n\nIf the IP field of laddr is nil or an unspecified IP address, ListenUDP listens on all available IP addresses of the local system except multicast IP addresses. If the Port field of laddr is 0, a port number is automatically chosen.\n"
      },
      "sortText": "00061",
      "filterText": "ListenUDP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenUDP"
      }
    },
    {
      "label": "ListenUnix",
      "kind": 3,
      "detail": "func(network string, laddr *net.UnixAddr) (*net.UnixListener, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenUnix acts like Listen for Unix networks.\n\nThe network must be \"unix\" or \"unixpacket\".\n"
      },
      "sortText": "00062",
      "filterText": "ListenUnix",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenUnix"
      }
    },
    {
      "label": "ListenUnixgram",
      "kind": 3,
      "detail": "func(network string, laddr *net.UnixAddr) (*net.UnixConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenUnixgram acts like ListenPacket for Unix networks.\n\nThe network must be \"unixgram\".\n"
      },
      "sortText": "00063",
      "filterText": "ListenUnixgram",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenUnixgram"
      }
    },
    {
      "label": "Listener",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A Listener is a generic network listener for stream-oriented protocols.\n\nMultiple goroutines may invoke methods on a Listener simultaneously.\n"
      },
      "sortText": "00064",
      "filterText": "Listener",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Listener"
      }
    },
    {
      "label": "LookupAddr",
      "kind": 3,
      "detail": "func(addr string) (names []string, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupAddr performs a reverse lookup for the given address, returning a list of names mapping to that address.\n\nThe returned names are validated to be properly formatted presentation-format domain names. If the response contains invalid names, those records are filtered out and an error will be returned alongside the remaining results, if any.\n\nWhen using the host C library resolver, at most one result will be returned. To bypass the host resolver, use a custom Resolver.\n\nLookupAddr uses context.Background internally; to specify the context, use Resolver.LookupAddr.\n"
      },
      "sortText": "00065",
      "filterText": "LookupAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupAddr"
      }
    },
    {
      "label": "LookupCNAME",
      "kind": 3,
      "detail": "func(host string) (cname string, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupCNAME returns the canonical name for the given host. Callers that do not care about the canonical name can call LookupHost or LookupIP directly; both take care of resolving the canonical name as part of the lookup.\n\nA canonical name is the final name after following zero or more CNAME records. LookupCNAME does not return an error if host does not contain DNS \"CNAME\" records, as long as host resolves to address records.\n\nThe returned canonical name is validated to be a properly formatted presentation-format domain name.\n\nLookupCNAME uses context.Background internally; to specify the context, use Resolver.LookupCNAME.\n"
      },
      "sortText": "00066",
      "filterText": "LookupCNAME",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupCNAME"
      }
    },
    {
      "label": "LookupHost",
      "kind": 3,
      "detail": "func(host string) (addrs []string, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupHost looks up the given host using the local resolver. It returns a slice of that host's addresses.\n\nLookupHost uses context.Background internally; to specify the context, use Resolver.LookupHost.\n"
      },
      "sortText": "00067",
      "filterText": "LookupHost",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupHost"
      }
    },
    {
      "label": "LookupIP",
      "kind": 3,
      "detail": "func(host string) ([]net.IP, error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupIP looks up host using the local resolver. It returns a slice of that host's IPv4 and IPv6 addresses.\n"
      },
      "sortText": "00068",
      "filterText": "LookupIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupIP"
      }
    },
    {
      "label": "LookupMX",
      "kind": 3,
      "detail": "func(name string) ([]*net.MX, error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupMX returns the DNS MX records for the given domain name sorted by preference.\n\nThe returned mail server names are validated to be properly formatted presentation-format domain names. If the response contains invalid names, those records are filtered out and an error will be returned alongside the remaining results, if any.\n\nLookupMX uses context.Background internally; to specify the context, use Resolver.LookupMX.\n"
      },
      "sortText": "00069",
      "filterText": "LookupMX",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupMX"
      }
    },
    {
      "label": "LookupNS",
      "kind": 3,
      "detail": "func(name string) ([]*net.NS, error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupNS returns the DNS NS records for the given domain name.\n\nThe returned name server names are validated to be properly formatted presentation-format domain names. If the response contains invalid names, those records are filtered out and an error will be returned alongside the remaining results, if any.\n\nLookupNS uses context.Background internally; to specify the context, use Resolver.LookupNS.\n"
      },
      "sortText": "00070",
      "filterText": "LookupNS",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupNS"
      }
    },
    {
      "label": "LookupPort",
      "kind": 3,
      "detail": "func(network string, service string) (port int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupPort looks up the port for the given network and service.\n\nLookupPort uses context.Background internally; to specify the context, use Resolver.LookupPort.\n"
      },
      "sortText": "00071",
      "filterText": "LookupPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupPort"
      }
    },
    {
      "label": "LookupSRV",
      "kind": 3,
      "detail": "func(service string, proto string, name string) (cname string, addrs []*net.SRV, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupSRV tries to resolve an SRV query of the given service, protocol, and domain name. The proto is \"tcp\" or \"udp\". The returned records are sorted by priority and randomized by weight within a priority.\n\nLookupSRV constructs the DNS name to look up following RFC 2782. That is, it looks up \\_service.\\_proto.name. To accommodate services publishing SRV records under non-standard names, if both service and proto are empty strings, LookupSRV looks up name directly.\n\nThe returned service names are validated to be properly formatted presentation-format domain names. If the response contains invalid names, those records are filtered out and an error will be returned alongside the remaining results, if any.\n"
      },
      "sortText": "00072",
      "filterText": "LookupSRV",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupSRV"
      }
    },
    {
      "label": "LookupTXT",
      "kind": 3,
      "detail": "func(name string) ([]string, error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupTXT returns the DNS TXT records for the given domain name.\n\nLookupTXT uses context.Background internally; to specify the context, use Resolver.LookupTXT.\n"
      },
      "sortText": "00073",
      "filterText": "LookupTXT",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupTXT"
      }
    },
    {
      "label": "MX",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An MX represents a single DNS MX record.\n"
      },
      "sortText": "00074",
      "filterText": "MX",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "MX"
      }
    },
    {
      "label": "NS",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An NS represents a single DNS NS record.\n"
      },
      "sortText": "00075",
      "filterText": "NS",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "NS"
      }
    },
    {
      "label": "OpError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "OpError is the error type usually returned by functions in the net package. It describes the operation, network type, and address of an error.\n"
      },
      "sortText": "00076",
      "filterText": "OpError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "OpError"
      }
    },
    {
      "label": "PacketConn",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "PacketConn is a generic packet-oriented network connection.\n\nMultiple goroutines may invoke methods on a PacketConn simultaneously.\n"
      },
      "sortText": "00077",
      "filterText": "PacketConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "PacketConn"
      }
    },
    {
      "label": "ParseCIDR",
      "kind": 3,
      "detail": "func(s string) (net.IP, *net.IPNet, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ParseCIDR parses s as a CIDR notation IP address and prefix length, like \"192.0.2.0/24\" or \"2001:db8::/32\", as defined in RFC 4632 and RFC 4291.\n\nIt returns the IP address and the network implied by the IP and prefix length. For example, ParseCIDR(\"192.0.2.1/24\") returns the IP address 192.0.2.1 and the network 192.0.2.0/24.\n"
      },
      "sortText": "00078",
      "filterText": "ParseCIDR",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ParseCIDR"
      }
    },
    {
      "label": "ParseError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A ParseError is the error type of literal network address parsers.\n"
      },
      "sortText": "00079",
      "filterText": "ParseError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ParseError"
      }
    },
    {
      "label": "ParseIP",
      "kind": 3,
      "detail": "func(s string) net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "ParseIP parses s as an IP address, returning the result. The string s can be in IPv4 dotted decimal (\"192.0.2.1\"), IPv6 (\"2001:db8::68\"), or IPv4-mapped IPv6 (\"::ffff:192.0.2.1\") form. If s is not a valid textual representation of an IP address, ParseIP returns nil.\n"
      },
      "sortText": "00080",
      "filterText": "ParseIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ParseIP"
      }
    },
    {
      "label": "ParseMAC",
      "kind": 3,
      "detail": "func(s string) (hw net.HardwareAddr, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "ParseMAC parses s as an IEEE 802 MAC-48, EUI-48, EUI-64, or a 20-octet IP over InfiniBand link-layer address using one of the following formats:\n\n\t00:00:5e:00:53:01\n\t02:00:5e:10:00:00:00:01\n\t00:00:00:00:fe:80:00:00:00:00:00:00:02:00:5e:10:00:00:00:01\n\t00-00-5e-00-53-01\n\t02-00-5e-10-00-00-00-01\n\t00-00-00-00-fe-80-00-00-00-00-00-00-02-00-5e-10-00-00-00-01\n\t0000.5e00.5301\n\t0200.5e10.0000.0001\n\t0000.0000.fe80.0000.0000.0000.0200.5e10.0000.0001\n"
      },
      "sortText": "00081",
      "filterText": "ParseMAC",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ParseMAC"
      }
    },
    {
      "label": "Pipe",
      "kind": 3,
      "detail": "func() (net.Conn, net.Conn)",
      "documentation": {
        "kind": "markdown",
        "value": "Pipe creates a synchronous, in-memory, full duplex network connection; both ends implement the Conn interface. Reads on one end are matched with writes on the other, copying data directly between the two; there is no internal buffering.\n"
      },
      "sortText": "00082",
      "filterText": "Pipe",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Pipe"
      }
    },
    {
      "label": "ResolveIPAddr",
      "kind": 3,
      "detail": "func(network string, address string) (*net.IPAddr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ResolveIPAddr returns an address of IP end point.\n\nThe network must be an IP network name.\n\nIf the host in the address parameter is not a literal IP address, ResolveIPAddr resolves the address to an address of IP end point. Otherwise, it parses the address as a literal IP address. The address parameter can use a host name, but this is not recommended, because it will return at most one of the host name's IP addresses.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00083",
      "filterText": "ResolveIPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ResolveIPAddr"
      }
    },
    {
      "label": "ResolveTCPAddr",
      "kind": 3,
      "detail": "func(network string, address string) (*net.TCPAddr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ResolveTCPAddr returns an address of TCP end point.\n\nThe network must be a TCP network name.\n\nIf the host in the address parameter is not a literal IP address or the port is not a literal port number, ResolveTCPAddr resolves the address to an address of TCP end point. Otherwise, it parses the address as a pair of literal IP address and port number. The address parameter can use a host name, but this is not recommended, because it will return at most one of the host name's IP addresses.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00084",
      "filterText": "ResolveTCPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ResolveTCPAddr"
      }
    },
    {
      "label": "ResolveUDPAddr",
      "kind": 3,
      "detail": "func(network string, address string) (*net.UDPAddr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ResolveUDPAddr returns an address of UDP end point.\n\nThe network must be a UDP network name.\n\nIf the host in the address parameter is not a literal IP address or the port is not a literal port number, ResolveUDPAddr resolves the address to an address of UDP end point. Otherwise, it parses the address as a pair of literal IP address and port number. The address parameter can use a host name, but this is not recommended, because it will return at most one of the host name's IP addresses.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00085",
      "filterText": "ResolveUDPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ResolveUDPAddr"
      }
    },
    {
      "label": "ResolveUnixAddr",
      "kind": 3,
      "detail": "func(network string, address string) (*net.UnixAddr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ResolveUnixAddr returns an address of Unix domain socket end point.\n\nThe network must be a Unix network name.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00086",
      "filterText": "ResolveUnixAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ResolveUnixAddr"
      }
    },
    {
      "label": "Resolver",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A Resolver looks up names and numbers.\n\nA nil \\*Resolver is equivalent to a zero Resolver.\n"
      },
      "sortText": "00087",
      "filterText": "Resolver",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Resolver"
      }
    },
    {
      "label": "SRV",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An SRV represents a single DNS SRV record.\n"
      },
      "sortText": "00088",
      "filterText": "SRV",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "SRV"
      }
    },
    {
      "label": "SplitHostPort",
      "kind": 3,
      "detail": "func(hostport string) (host string, port string, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "SplitHostPort splits a network address of the form \"host:port\", \"host%zone:port\", \"\\[host]:port\" or \"\\[host%zone]:port\" into host or host%zone and port.\n\nA literal IPv6 address in hostport must be enclosed in square brackets, as in \"\\[::1]:80\", \"\\[::1%lo0]:80\".\n\nSee func Dial for a description of the hostport parameter, and host and port results.\n"
      },
      "sortText": "00089",
      "filterText": "SplitHostPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "SplitHostPort"
      }
    },
    {
      "label": "TCPAddr",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "TCPAddr represents the address of a TCP end point.\n"
      },
      "sortText": "00090",
      "filterText": "TCPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "TCPAddr"
      }
    },
    {
      "label": "TCPAddrFromAddrPort",
      "kind": 3,
      "detail": "func(addr netip.AddrPort) *net.TCPAddr",
      "documentation": {
        "kind": "markdown",
        "value": "TCPAddrFromAddrPort returns addr as a TCPAddr. If addr.IsValid() is false, then the returned TCPAddr will contain a nil IP field, indicating an address family-agnostic unspecified address.\n"
      },
      "sortText": "00091",
      "filterText": "TCPAddrFromAddrPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "TCPAddrFromAddrPort"
      }
    },
    {
      "label": "TCPConn",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "TCPConn is an implementation of the Conn interface for TCP network connections.\n"
      },
      "sortText": "00092",
      "filterText": "TCPConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "TCPConn"
      }
    },
    {
      "label": "TCPListener",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "TCPListener is a TCP network listener. Clients should typically use variables of type Listener instead of assuming TCP.\n"
      },
      "sortText": "00093",
      "filterText": "TCPListener",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "TCPListener"
      }
    },
    {
      "label": "UDPAddr",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UDPAddr represents the address of a UDP end point.\n"
      },
      "sortText": "00094",
      "filterText": "UDPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UDPAddr"
      }
    },
    {
      "label": "UDPAddrFromAddrPort",
      "kind": 3,
      "detail": "func(addr netip.AddrPort) *net.UDPAddr",
      "documentation": {
        "kind": "markdown",
        "value": "UDPAddrFromAddrPort returns addr as a UDPAddr. If addr.IsValid() is false, then the returned UDPAddr will contain a nil IP field, indicating an address family-agnostic unspecified address.\n"
      },
      "sortText": "00095",
      "filterText": "UDPAddrFromAddrPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UDPAddrFromAddrPort"
      }
    },
    {
      "label": "UDPConn",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UDPConn is the implementation of the Conn and PacketConn interfaces for UDP network connections.\n"
      },
      "sortText": "00096",
      "filterText": "UDPConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UDPConn"
      }
    },
    {
      "label": "UnixAddr",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UnixAddr represents the address of a Unix domain socket end point.\n"
      },
      "sortText": "00097",
      "filterText": "UnixAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UnixAddr"
      }
    },
    {
      "label": "UnixConn",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UnixConn is an implementation of the Conn interface for connections to Unix domain sockets.\n"
      },
      "sortText": "00098",
      "filterText": "UnixConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UnixConn"
      }
    },
    {
      "label": "UnixListener",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UnixListener is a Unix domain socket listener. Clients should typically use variables of type Listener instead of assuming Unix domain sockets.\n"
      },
      "sortText": "00099",
      "filterText": "UnixListener",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UnixListener"
      }
    },
    {
      "label": "UnknownNetworkError",
      "kind": 7,
      "detail": "string",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00100",
      "filterText": "UnknownNetworkError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UnknownNetworkError"
      }
    },
    {
      "label": "DefaultResolver.Dial",
      "kind": 5,
      "detail": "func(ctx context.Context, network, address string) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Dial optionally specifies an alternate dialer for use by Go's built-in DNS resolver to make TCP and UDP connections to DNS services. The host in the address parameter will always be a literal IP address and not a host name, and the port in the address parameter will be a literal port number and not a service name. If the Conn returned is also a PacketConn, sent and received DNS messages must adhere to RFC 1035 section 4.2.1, \"UDP usage\". Otherwise, DNS messages transmitted over Conn must adhere to RFC 7766 section 5, \"Transport Protocol Selection\". If nil, the default dialer is used.\n"
      },
      "sortText": "00101",
      "filterText": "DefaultResolver.Dial",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DefaultResolver.Dial"
      }
    },
    {
      "label": "DefaultResolver.PreferGo",
      "kind": 5,
      "detail": "bool",
      "documentation": {
        "kind": "markdown",
        "value": "PreferGo controls whether Go's built-in DNS resolver is preferred on platforms where it's available. It is equivalent to setting GODEBUG=netdns=go, but scoped to just this resolver.\n"
      },
      "sortText": "00102",
      "filterText": "DefaultResolver.PreferGo",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DefaultResolver.PreferGo"
      }
    },
    {
      "label": "DefaultResolver.StrictErrors",
      "kind": 5,
      "detail": "bool",
      "documentation": {
        "kind": "markdown",
        "value": "StrictErrors controls the behavior of temporary errors (including timeout, socket errors, and SERVFAIL) when using Go's built-in resolver. For a query composed of multiple sub-queries (such as an A+AAAA address lookup, or walking the DNS search list), this option causes such errors to abort the whole query instead of returning a partial result. This is not enabled by default because it may affect compatibility with resolvers that process AAAA queries incorrectly.\n"
      },
      "sortText": "00103",
      "filterText": "DefaultResolver.StrictErrors",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DefaultResolver.StrictErrors"
      }
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 5
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 11,
        "character": 5
      },
      "end": {
        "line": 11,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 6,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 5
        },
        "end": {
          "line": 11,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 6,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 13,
          "character": 0
        },
        "end": {
          "line": 13,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found 'if'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 4
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 10,
        "character": 14
      },
      "end": {
        "line": 10,
        "character": 17
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 11,
        "character": 1
      },
      "end": {
        "line": 11,
        "character": 4
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 10,
        "character": 14
      },
      "end": {
        "line": 10,
        "character": 17
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 11,
        "character": 1
      },
      "end": {
        "line": 11,
        "character": 4
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 7,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 12,
          "character": 0
        }
      },
      "rangeLength": 6,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 7,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 8,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 47
        },
        "end": {
          "line": 10,
          "character": 47
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 9,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 10,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 8,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 10,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 1
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 11,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 11,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: n"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 12,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 2
        },
        "end": {
          "line": 11,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "e"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 12,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: ne"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 13,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 3
        },
        "end": {
          "line": 11,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 13,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 4
        }
      },
      "severity": 1,
      "code": "InvalidPkgUse",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#InvalidPkgUse"
      },
      "source": "compiler",
      "message": "use of package net not in selector"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 14,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 4
        },
        "end": {
          "line": 11,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "."
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 5
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 14,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 13,
          "character": 0
        },
        "end": {
          "line": 13,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found 'if'"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Addr",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Addr represents a network end point address.\n\nThe two methods Network and String conventionally return strings that can be passed as the arguments to Dial, but the exact form and meaning of the strings is up to the implementation.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Addr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Addr"
      }
    },
    {
      "label": "AddrError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00001",
      "filterText": "AddrError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "AddrError"
      }
    },
    {
      "label": "Buffers",
      "kind": 7,
      "detail": "[][]byte",
      "documentation": {
        "kind": "markdown",
        "value": "Buffers contains zero or more runs of bytes to write.\n\nOn certain machines, for certain types of connections, this is optimized into an OS-specific batch write operation (such as \"writev\").\n"
      },
      "sortText": "00002",
      "filterText": "Buffers",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Buffers"
      }
    },
    {
      "label": "CIDRMask",
      "kind": 3,
      "detail": "func(ones int, bits int) net.IPMask",
      "documentation": {
        "kind": "markdown",
        "value": "CIDRMask returns an IPMask consisting of 'ones' 1 bits followed by 0s up to a total length of 'bits' bits. For a mask of this form, CIDRMask is the inverse of IPMask.Size.\n"
      },
      "sortText": "00003",
      "filterText": "CIDRMask",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "CIDRMask"
      }
    },
    {
      "label": "Conn",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Conn is a generic stream-oriented network connection.\n\nMultiple goroutines may invoke methods on a Conn simultaneously.\n"
      },
      "sortText": "00004",
      "filterText": "Conn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Conn"
      }
    },
    {
      "label": "DNSConfigError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "DNSConfigError represents an error reading the machine's DNS configuration. (No longer used; kept for compatibility.)\n"
      },
      "sortText": "00005",
      "filterText": "DNSConfigError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DNSConfigError"
      }
    },
    {
      "label": "DNSError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "DNSError represents a DNS lookup error.\n"
      },
      "sortText": "00006",
      "filterText": "DNSError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DNSError"
      }
    },
    {
      "label": "DefaultResolver",
      "kind": 6,
      "detail": "*net.Resolver",
      "documentation": {
        "kind": "markdown",
        "value": "DefaultResolver is the resolver used by the package-level Lookup functions and by Dialers without a specified Resolver.\n"
      },
      "sortText": "00007",
      "filterText": "DefaultResolver",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DefaultResolver"
      }
    },
    {
      "label": "Dial",
      "kind": 3,
      "detail": "func(network string, address string) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Dial connects to the address on the named network.\n\nKnown networks are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".\n\nFor TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"\\[2001:db8::1]:80\" or \"\\[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007. The functions JoinHostPort and SplitHostPort manipulate a pair of host and port in this form. When using TCP, and the host resolves to multiple IP addresses, Dial will try each IP address in order until one succeeds.\n\nExamples:\n\n\tDial(\"tcp\", \"golang.org:http\")\n\tDial(\"tcp\", \"192.0.2.1:http\")\n\tDial(\"tcp\", \"198.51.100.1:80\")\n\tDial(\"udp\", \"[2001:db8::1]:domain\")\n\tDial(\"udp\", \"[fe80::1%lo0]:53\")\n\tDial(\"tcp\", \":80\")\n\nFor IP networks, the network must be \"ip\", \"ip4\" or \"ip6\" followed by a colon and a literal protocol number or a protocol name, and the address has the form \"host\". The host must be a literal IP address or a literal IPv6 address with zone. It depends on each operating system how the operating system behaves with a non-well known protocol number such as \"0\" or \"255\".\n\nExamples:\n\n\tDial(\"ip4:1\", \"192.0.2.1\")\n\tDial(\"ip6:ipv6-icmp\", \"2001:db8::1\")\n\tDial(\"ip6:58\", \"fe80::1%lo0\")\n\nFor TCP, UDP and IP networks, if the host is empty or a literal unspecified IP address, as in \":80\", \"0.0.0.0:80\" or \"\\[::]:80\" for TCP and UDP, \"\", \"0.0.0.0\" or \"::\" for IP, the local system is assumed.\n\nFor Unix networks, the address must be a file system path.\n"
      },
      "sortText": "00008",
      "filterText": "Dial",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Dial"
      }
    },
    {
      "label": "DialIP",
      "kind": 3,
      "detail": "func(network string, laddr *net.IPAddr, raddr *net.IPAddr) (*net.IPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialIP acts like Dial for IP networks.\n\nThe network must be an IP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00009",
      "filterText": "DialIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialIP"
      }
    },
    {
      "label": "DialTCP",
      "kind": 3,
      "detail": "func(network string, laddr *net.TCPAddr, raddr *net.TCPAddr) (*net.TCPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialTCP acts like Dial for TCP networks.\n\nThe network must be a TCP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00010",
      "filterText": "DialTCP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialTCP"
      }
    },
    {
      "label": "DialTimeout",
      "kind": 3,
      "detail": "func(network string, address string, timeout time.Duration) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialTimeout acts like Dial but takes a timeout.\n\nThe timeout includes name resolution, if required. When using TCP, and the host in the address parameter resolves to multiple IP addresses, the timeout is spread over each consecutive dial, such that each is given an appropriate fraction of the time to connect.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00011",
      "filterText": "DialTimeout",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialTimeout"
      }
    },
    {
      "label": "DialUDP",
      "kind": 3,
      "detail": "func(network string, laddr *net.UDPAddr, raddr *net.UDPAddr) (*net.UDPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialUDP acts like Dial for UDP networks.\n\nThe network must be a UDP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00012",
      "filterText": "DialUDP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialUDP"
      }
    },
    {
      "label": "DialUnix",
      "kind": 3,
      "detail": "func(network string, laddr *net.UnixAddr, raddr *net.UnixAddr) (*net.UnixConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialUnix acts like Dial for Unix networks.\n\nThe network must be a Unix network name; see func Dial for details.\n\nIf laddr is non-nil, it is used as the local address for the connection.\n"
      },
      "sortText": "00013",
      "filterText": "DialUnix",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DialUnix"
      }
    },
    {
      "label": "Dialer",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A Dialer contains options for connecting to an address.\n\nThe zero value for each field is equivalent to dialing without that option. Dialing with the zero value of Dialer is therefore equivalent to just calling the Dial function.\n\nIt is safe to call Dialer's methods concurrently.\n"
      },
      "sortText": "00014",
      "filterText": "Dialer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Dialer"
      }
    },
    {
      "label": "ErrClosed",
      "kind": 6,
      "detail": "error",
      "documentation": {
        "kind": "markdown",
        "value": "ErrClosed is the error returned by an I/O call on a network connection that has already been closed, or that is closed by another goroutine before the I/O is completed. This may be wrapped in another error, and should normally be tested using errors.Is(err, net.ErrClosed).\n"
      },
      "sortText": "00015",
      "filterText": "ErrClosed",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ErrClosed"
      }
    },
    {
      "label": "ErrWriteToConnected",
      "kind": 6,
      "detail": "error",
      "documentation": {
        "kind": "markdown",
        "value": "Various errors contained in OpError.\n"
      },
      "sortText": "00016",
      "filterText": "ErrWriteToConnected",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ErrWriteToConnected"
      }
    },
    {
      "label": "Error",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An Error represents a network error.\n"
      },
      "sortText": "00017",
      "filterText": "Error",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Error"
      }
    },
    {
      "label": "FileConn",
      "kind": 3,
      "detail": "func(f *os.File) (c net.Conn, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "FileConn returns a copy of the network connection corresponding to the open file f. It is the caller's responsibility to close f when finished. Closing c does not affect f, and closing f does not affect c.\n"
      },
      "sortText": "00018",
      "filterText": "FileConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FileConn"
      }
    },
    {
      "label": "FileListener",
      "kind": 3,
      "detail": "func(f *os.File) (ln net.Listener, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "FileListener returns a copy of the network listener corresponding to the open file f. It is the caller's responsibility to close ln when finished. Closing ln does not affect f, and closing f does not affect ln.\n"
      },
      "sortText": "00019",
      "filterText": "FileListener",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FileListener"
      }
    },
    {
      "label": "FilePacketConn",
      "kind": 3,
      "detail": "func(f *os.File) (c net.PacketConn, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "FilePacketConn returns a copy of the packet network connection corresponding to the open file f. It is the caller's responsibility to close f when finished. Closing c does not affect f, and closing f does not affect c.\n"
      },
      "sortText": "00020",
      "filterText": "FilePacketConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FilePacketConn"
      }
    },
    {
      "label": "FlagBroadcast",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface supports broadcast access capability\n"
      },
      "sortText": "00021",
      "filterText": "FlagBroadcast",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagBroadcast"
      }
    },
    {
      "label": "FlagLoopback",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface is a loopback interface\n"
      },
      "sortText": "00022",
      "filterText": "FlagLoopback",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagLoopback"
      }
    },
    {
      "label": "FlagMulticast",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface supports multicast access capability\n"
      },
      "sortText": "00023",
      "filterText": "FlagMulticast",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagMulticast"
      }
    },
    {
      "label": "FlagPointToPoint",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface belongs to a point-to-point link\n"
      },
      "sortText": "00024",
      "filterText": "FlagPointToPoint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagPointToPoint"
      }
    },
    {
      "label": "FlagRunning",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface is in running state\n"
      },
      "sortText": "00025",
      "filterText": "FlagRunning",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagRunning"
      }
    },
    {
      "label": "FlagUp",
      "kind": 21,
      "detail": "net.Flags",
      "documentation": {
        "kind": "markdown",
        "value": "interface is administratively up\n"
      },
      "sortText": "00026",
      "filterText": "FlagUp",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "FlagUp"
      }
    },
    {
      "label": "Flags",
      "kind": 7,
      "detail": "uint",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00027",
      "filterText": "Flags",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Flags"
      }
    },
    {
      "label": "HardwareAddr",
      "kind": 7,
      "detail": "[]byte",
      "documentation": {
        "kind": "markdown",
        "value": "A HardwareAddr represents a physical hardware address.\n"
      },
      "sortText": "00028",
      "filterText": "HardwareAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "HardwareAddr"
      }
    },
    {
      "label": "IP",
      "kind": 7,
      "detail": "[]byte",
      "documentation": {
        "kind": "markdown",
        "value": "An IP is a single IP address, a slice of bytes. Functions in this package accept either 4-byte (IPv4) or 16-byte (IPv6) slices as input.\n\nNote that in this documentation, referring to an IP address as an IPv4 address or an IPv6 address is a semantic property of the address, not just the length of the byte slice: a 16-byte slice can still be an IPv4 address.\n"
      },
      "sortText": "00029",
      "filterText": "IP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IP"
      }
    },
    {
      "label": "IPAddr",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "IPAddr represents the address of an IP end point.\n"
      },
      "sortText": "00030",
      "filterText": "IPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPAddr"
      }
    },
    {
      "label": "IPConn",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "IPConn is the implementation of the Conn and PacketConn interfaces for IP network connections.\n"
      },
      "sortText": "00031",
      "filterText": "IPConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPConn"
      }
    },
    {
      "label": "IPMask",
      "kind": 7,
      "detail": "[]byte",
      "documentation": {
        "kind": "markdown",
        "value": "An IPMask is a bitmask that can be used to manipulate IP addresses for IP addressing and routing.\n\nSee type IPNet and func ParseCIDR for details.\n"
      },
      "sortText": "00032",
      "filterText": "IPMask",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPMask"
      }
    },
    {
      "label": "IPNet",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An IPNet represents an IP network.\n"
      },
      "sortText": "00033",
      "filterText": "IPNet",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPNet"
      }
    },
    {
      "label": "IPv4",
      "kind": 3,
      "detail": "func(a byte, b byte, c byte, d byte) net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "IPv4 returns the IP address (in 16-byte form) of the IPv4 address a.b.c.d.\n"
      },
      "sortText": "00034",
      "filterText": "IPv4",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4"
      }
    },
    {
      "label": "IPv4Mask",
      "kind": 3,
      "detail": "func(a byte, b byte, c byte, d byte) net.IPMask",
      "documentation": {
        "kind": "markdown",
        "value": "IPv4Mask returns the IP mask (in 4-byte form) of the IPv4 mask a.b.c.d.\n"
      },
      "sortText": "00035",
      "filterText": "IPv4Mask",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4Mask"
      }
    },
    {
      "label": "IPv4allrouter",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv4 addresses\n"
      },
      "sortText": "00036",
      "filterText": "IPv4allrouter",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4allrouter"
      }
    },
    {
      "label": "IPv4allsys",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv4 addresses\n"
      },
      "sortText": "00037",
      "filterText": "IPv4allsys",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4allsys"
      }
    },
    {
      "label": "IPv4bcast",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv4 addresses\n"
      },
      "sortText": "00038",
      "filterText": "IPv4bcast",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4bcast"
      }
    },
    {
      "label": "IPv4len",
      "kind": 21,
      "detail": "int",
      "documentation": {
        "kind": "markdown",
        "value": "IP address lengths (bytes).\n"
      },
      "sortText": "00039",
      "filterText": "IPv4len",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4len"
      }
    },
    {
      "label": "IPv4zero",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv4 addresses\n"
      },
      "sortText": "00040",
      "filterText": "IPv4zero",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv4zero"
      }
    },
    {
      "label": "IPv6interfacelocalallnodes",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00041",
      "filterText": "IPv6interfacelocalallnodes",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6interfacelocalallnodes"
      }
    },
    {
      "label": "IPv6len",
      "kind": 21,
      "detail": "int",
      "documentation": {
        "kind": "markdown",
        "value": "IP address lengths (bytes).\n"
      },
      "sortText": "00042",
      "filterText": "IPv6len",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6len"
      }
    },
    {
      "label": "IPv6linklocalallnodes",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00043",
      "filterText": "IPv6linklocalallnodes",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6linklocalallnodes"
      }
    },
    {
      "label": "IPv6linklocalallrouters",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00044",
      "filterText": "IPv6linklocalallrouters",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6linklocalallrouters"
      }
    },
    {
      "label": "IPv6loopback",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00045",
      "filterText": "IPv6loopback",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6loopback"
      }
    },
    {
      "label": "IPv6unspecified",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00046",
      "filterText": "IPv6unspecified",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6unspecified"
      }
    },
    {
      "label": "IPv6zero",
      "kind": 6,
      "detail": "net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "Well-known IPv6 addresses\n"
      },
      "sortText": "00047",
      "filterText": "IPv6zero",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "IPv6zero"
      }
    },
    {
      "label": "Interface",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Interface represents a mapping between network interface name and index. It also represents network interface facility information.\n"
      },
      "sortText": "00048",
      "filterText": "Interface",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Interface"
      }
    },
    {
      "label": "InterfaceAddrs",
      "kind": 3,
      "detail": "func() ([]net.Addr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "InterfaceAddrs returns a list of the system's unicast interface addresses.\n\nThe returned list does not identify the associated interface; use Interfaces and Interface.Addrs for more detail.\n"
      },
      "sortText": "00049",
      "filterText": "InterfaceAddrs",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "InterfaceAddrs"
      }
    },
    {
      "label": "InterfaceByIndex",
      "kind": 3,
      "detail": "func(index int) (*net.Interface, error)",
      "documentation": {
        "kind": "markdown",
        "value": "InterfaceByIndex returns the interface specified by index.\n\nOn Solaris, it returns one of the logical network interfaces sharing the logical data link; for more precision use InterfaceByName.\n"
      },
      "sortText": "00050",
      "filterText": "InterfaceByIndex",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "InterfaceByIndex"
      }
    },
    {
      "label": "InterfaceByName",
      "kind": 3,
      "detail": "func(name string) (*net.Interface, error)",
      "documentation": {
        "kind": "markdown",
        "value": "InterfaceByName returns the interface specified by name.\n"
      },
      "sortText": "00051",
      "filterText": "InterfaceByName",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "InterfaceByName"
      }
    },
    {
      "label": "Interfaces",
      "kind": 3,
      "detail": "func() ([]net.Interface, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Interfaces returns a list of the system's network interfaces.\n"
      },
      "sortText": "00052",
      "filterText": "Interfaces",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Interfaces"
      }
    },
    {
      "label": "InvalidAddrError",
      "kind": 7,
      "detail": "string",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00053",
      "filterText": "InvalidAddrError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "InvalidAddrError"
      }
    },
    {
      "label": "JoinHostPort",
      "kind": 3,
      "detail": "func(host string, port string) string",
      "documentation": {
        "kind": "markdown",
        "value": "JoinHostPort combines host and port into a network address of the form \"host:port\". If host contains a colon, as found in literal IPv6 addresses, then JoinHostPort returns \"\\[host]:port\".\n\nSee func Dial for a description of the host and port parameters.\n"
      },
      "sortText": "00054",
      "filterText": "JoinHostPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "JoinHostPort"
      }
    },
    {
      "label": "Listen",
      "kind": 3,
      "detail": "func(network string, address string) (net.Listener, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Listen announces on the local network address.\n\nThe network must be \"tcp\", \"tcp4\", \"tcp6\", \"unix\" or \"unixpacket\".\n\nFor TCP networks, if the host in the address parameter is empty or a literal unspecified IP address, Listen listens on all available unicast and anycast IP addresses of the local system. To only use IPv4, use network \"tcp4\". The address can use a host name, but this is not recommended, because it will create a listener for at most one of the host's IP addresses. If the port in the address parameter is empty or \"0\", as in \"127.0.0.1:\" or \"\\[::1]:0\", a port number is automatically chosen. The Addr method of Listener can be used to discover the chosen port.\n\nSee func Dial for a description of the network and address parameters.\n\nListen uses context.Background internally; to specify the context, use ListenConfig.Listen.\n"
      },
      "sortText": "00055",
      "filterText": "Listen",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Listen"
      }
    },
    {
      "label": "ListenConfig",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "ListenConfig contains options for listening to an address.\n"
      },
      "sortText": "00056",
      "filterText": "ListenConfig",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenConfig"
      }
    },
    {
      "label": "ListenIP",
      "kind": 3,
      "detail": "func(network string, laddr *net.IPAddr) (*net.IPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenIP acts like ListenPacket for IP networks.\n\nThe network must be an IP network name; see func Dial for details.\n\nIf the IP field of laddr is nil or an unspecified IP address, ListenIP listens on all available IP addresses of the local system except multicast IP addresses.\n"
      },
      "sortText": "00057",
      "filterText": "ListenIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenIP"
      }
    },
    {
      "label": "ListenMulticastUDP",
      "kind": 3,
      "detail": "func(network string, ifi *net.Interface, gaddr *net.UDPAddr) (*net.UDPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenMulticastUDP acts like ListenPacket for UDP networks but takes a group address on a specific network interface.\n\nThe network must be a UDP network name; see func Dial for details.\n\nListenMulticastUDP listens on all available IP addresses of the local system including the group, multicast IP address. If ifi is nil, ListenMulticastUDP uses the system-assigned multicast interface, although this is not recommended because the assignment depends on platforms and sometimes it might require routing configuration. If the Port field of gaddr is 0, a port number is automatically chosen.\n\nListenMulticastUDP is just for convenience of simple, small applications. There are golang.org/x/net/ipv4 and golang.org/x/net/ipv6 packages for general purpose uses.\n\nNote that ListenMulticastUDP will set the IP\\_MULTICAST\\_LOOP socket option to 0 under IPPROTO\\_IP, to disable loopback of multicast packets.\n"
      },
      "sortText": "00058",
      "filterText": "ListenMulticastUDP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenMulticastUDP"
      }
    },
    {
      "label": "ListenPacket",
      "kind": 3,
      "detail": "func(network string, address string) (net.PacketConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenPacket announces on the local network address.\n\nThe network must be \"udp\", \"udp4\", \"udp6\", \"unixgram\", or an IP transport. The IP transports are \"ip\", \"ip4\", or \"ip6\" followed by a colon and a literal protocol number or a protocol name, as in \"ip:1\" or \"ip:icmp\".\n\nFor UDP and IP networks, if the host in the address parameter is empty or a literal unspecified IP address, ListenPacket listens on all available IP addresses of the local system except multicast IP addresses. To only use IPv4, use network \"udp4\" or \"ip4:proto\". The address can use a host name, but this is not recommended, because it will create a listener for at most one of the host's IP addresses. If the port in the address parameter is empty or \"0\", as in \"127.0.0.1:\" or \"\\[::1]:0\", a port number is automatically chosen. The LocalAddr method of PacketConn can be used to discover the chosen port.\n\nSee func Dial for a description of the network and address parameters.\n\nListenPacket uses context.Background internally; to specify the context, use ListenConfig.ListenPacket.\n"
      },
      "sortText": "00059",
      "filterText": "ListenPacket",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenPacket"
      }
    },
    {
      "label": "ListenTCP",
      "kind": 3,
      "detail": "func(network string, laddr *net.TCPAddr) (*net.TCPListener, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenTCP acts like Listen for TCP networks.\n\nThe network must be a TCP network name; see func Dial for details.\n\nIf the IP field of laddr is nil or an unspecified IP address, ListenTCP listens on all available unicast and anycast IP addresses of the local system. If the Port field of laddr is 0, a port number is automatically chosen.\n"
      },
      "sortText": "00060",
      "filterText": "ListenTCP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenTCP"
      }
    },
    {
      "label": "ListenUDP",
      "kind": 3,
      "detail": "func(network string, laddr *net.UDPAddr) (*net.UDPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenUDP acts like ListenPacket for UDP networks.\n\nThe network must be a UDP network name; see func Dial for details.\n\nIf the IP field of laddr is nil or an unspecified IP address, ListenUDP listens on all available IP addresses of the local system except multicast IP addresses. If the Port field of laddr is 0, a port number is automatically chosen.\n"
      },
      "sortText": "00061",
      "filterText": "ListenUDP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenUDP"
      }
    },
    {
      "label": "ListenUnix",
      "kind": 3,
      "detail": "func(network string, laddr *net.UnixAddr) (*net.UnixListener, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenUnix acts like Listen for Unix networks.\n\nThe network must be \"unix\" or \"unixpacket\".\n"
      },
      "sortText": "00062",
      "filterText": "ListenUnix",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenUnix"
      }
    },
    {
      "label": "ListenUnixgram",
      "kind": 3,
      "detail": "func(network string, laddr *net.UnixAddr) (*net.UnixConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ListenUnixgram acts like ListenPacket for Unix networks.\n\nThe network must be \"unixgram\".\n"
      },
      "sortText": "00063",
      "filterText": "ListenUnixgram",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ListenUnixgram"
      }
    },
    {
      "label": "Listener",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A Listener is a generic network listener for stream-oriented protocols.\n\nMultiple goroutines may invoke methods on a Listener simultaneously.\n"
      },
      "sortText": "00064",
      "filterText": "Listener",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Listener"
      }
    },
    {
      "label": "LookupAddr",
      "kind": 3,
      "detail": "func(addr string) (names []string, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupAddr performs a reverse lookup for the given address, returning a list of names mapping to that address.\n\nThe returned names are validated to be properly formatted presentation-format domain names. If the response contains invalid names, those records are filtered out and an error will be returned alongside the remaining results, if any.\n\nWhen using the host C library resolver, at most one result will be returned. To bypass the host resolver, use a custom Resolver.\n\nLookupAddr uses context.Background internally; to specify the context, use Resolver.LookupAddr.\n"
      },
      "sortText": "00065",
      "filterText": "LookupAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupAddr"
      }
    },
    {
      "label": "LookupCNAME",
      "kind": 3,
      "detail": "func(host string) (cname string, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupCNAME returns the canonical name for the given host. Callers that do not care about the canonical name can call LookupHost or LookupIP directly; both take care of resolving the canonical name as part of the lookup.\n\nA canonical name is the final name after following zero or more CNAME records. LookupCNAME does not return an error if host does not contain DNS \"CNAME\" records, as long as host resolves to address records.\n\nThe returned canonical name is validated to be a properly formatted presentation-format domain name.\n\nLookupCNAME uses context.Background internally; to specify the context, use Resolver.LookupCNAME.\n"
      },
      "sortText": "00066",
      "filterText": "LookupCNAME",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupCNAME"
      }
    },
    {
      "label": "LookupHost",
      "kind": 3,
      "detail": "func(host string) (addrs []string, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupHost looks up the given host using the local resolver. It returns a slice of that host's addresses.\n\nLookupHost uses context.Background internally; to specify the context, use Resolver.LookupHost.\n"
      },
      "sortText": "00067",
      "filterText": "LookupHost",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupHost"
      }
    },
    {
      "label": "LookupIP",
      "kind": 3,
      "detail": "func(host string) ([]net.IP, error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupIP looks up host using the local resolver. It returns a slice of that host's IPv4 and IPv6 addresses.\n"
      },
      "sortText": "00068",
      "filterText": "LookupIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupIP"
      }
    },
    {
      "label": "LookupMX",
      "kind": 3,
      "detail": "func(name string) ([]*net.MX, error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupMX returns the DNS MX records for the given domain name sorted by preference.\n\nThe returned mail server names are validated to be properly formatted presentation-format domain names. If the response contains invalid names, those records are filtered out and an error will be returned alongside the remaining results, if any.\n\nLookupMX uses context.Background internally; to specify the context, use Resolver.LookupMX.\n"
      },
      "sortText": "00069",
      "filterText": "LookupMX",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupMX"
      }
    },
    {
      "label": "LookupNS",
      "kind": 3,
      "detail": "func(name string) ([]*net.NS, error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupNS returns the DNS NS records for the given domain name.\n\nThe returned name server names are validated to be properly formatted presentation-format domain names. If the response contains invalid names, those records are filtered out and an error will be returned alongside the remaining results, if any.\n\nLookupNS uses context.Background internally; to specify the context, use Resolver.LookupNS.\n"
      },
      "sortText": "00070",
      "filterText": "LookupNS",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupNS"
      }
    },
    {
      "label": "LookupPort",
      "kind": 3,
      "detail": "func(network string, service string) (port int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupPort looks up the port for the given network and service.\n\nLookupPort uses context.Background internally; to specify the context, use Resolver.LookupPort.\n"
      },
      "sortText": "00071",
      "filterText": "LookupPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupPort"
      }
    },
    {
      "label": "LookupSRV",
      "kind": 3,
      "detail": "func(service string, proto string, name string) (cname string, addrs []*net.SRV, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupSRV tries to resolve an SRV query of the given service, protocol, and domain name. The proto is \"tcp\" or \"udp\". The returned records are sorted by priority and randomized by weight within a priority.\n\nLookupSRV constructs the DNS name to look up following RFC 2782. That is, it looks up \\_service.\\_proto.name. To accommodate services publishing SRV records under non-standard names, if both service and proto are empty strings, LookupSRV looks up name directly.\n\nThe returned service names are validated to be properly formatted presentation-format domain names. If the response contains invalid names, those records are filtered out and an error will be returned alongside the remaining results, if any.\n"
      },
      "sortText": "00072",
      "filterText": "LookupSRV",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupSRV"
      }
    },
    {
      "label": "LookupTXT",
      "kind": 3,
      "detail": "func(name string) ([]string, error)",
      "documentation": {
        "kind": "markdown",
        "value": "LookupTXT returns the DNS TXT records for the given domain name.\n\nLookupTXT uses context.Background internally; to specify the context, use Resolver.LookupTXT.\n"
      },
      "sortText": "00073",
      "filterText": "LookupTXT",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "LookupTXT"
      }
    },
    {
      "label": "MX",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An MX represents a single DNS MX record.\n"
      },
      "sortText": "00074",
      "filterText": "MX",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "MX"
      }
    },
    {
      "label": "NS",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An NS represents a single DNS NS record.\n"
      },
      "sortText": "00075",
      "filterText": "NS",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "NS"
      }
    },
    {
      "label": "OpError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "OpError is the error type usually returned by functions in the net package. It describes the operation, network type, and address of an error.\n"
      },
      "sortText": "00076",
      "filterText": "OpError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "OpError"
      }
    },
    {
      "label": "PacketConn",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "PacketConn is a generic packet-oriented network connection.\n\nMultiple goroutines may invoke methods on a PacketConn simultaneously.\n"
      },
      "sortText": "00077",
      "filterText": "PacketConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "PacketConn"
      }
    },
    {
      "label": "ParseCIDR",
      "kind": 3,
      "detail": "func(s string) (net.IP, *net.IPNet, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ParseCIDR parses s as a CIDR notation IP address and prefix length, like \"192.0.2.0/24\" or \"2001:db8::/32\", as defined in RFC 4632 and RFC 4291.\n\nIt returns the IP address and the network implied by the IP and prefix length. For example, ParseCIDR(\"192.0.2.1/24\") returns the IP address 192.0.2.1 and the network 192.0.2.0/24.\n"
      },
      "sortText": "00078",
      "filterText": "ParseCIDR",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ParseCIDR"
      }
    },
    {
      "label": "ParseError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A ParseError is the error type of literal network address parsers.\n"
      },
      "sortText": "00079",
      "filterText": "ParseError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ParseError"
      }
    },
    {
      "label": "ParseIP",
      "kind": 3,
      "detail": "func(s string) net.IP",
      "documentation": {
        "kind": "markdown",
        "value": "ParseIP parses s as an IP address, returning the result. The string s can be in IPv4 dotted decimal (\"192.0.2.1\"), IPv6 (\"2001:db8::68\"), or IPv4-mapped IPv6 (\"::ffff:192.0.2.1\") form. If s is not a valid textual representation of an IP address, ParseIP returns nil.\n"
      },
      "sortText": "00080",
      "filterText": "ParseIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ParseIP"
      }
    },
    {
      "label": "ParseMAC",
      "kind": 3,
      "detail": "func(s string) (hw net.HardwareAddr, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "ParseMAC parses s as an IEEE 802 MAC-48, EUI-48, EUI-64, or a 20-octet IP over InfiniBand link-layer address using one of the following formats:\n\n\t00:00:5e:00:53:01\n\t02:00:5e:10:00:00:00:01\n\t00:00:00:00:fe:80:00:00:00:00:00:00:02:00:5e:10:00:00:00:01\n\t00-00-5e-00-53-01\n\t02-00-5e-10-00-00-00-01\n\t00-00-00-00-fe-80-00-00-00-00-00-00-02-00-5e-10-00-00-00-01\n\t0000.5e00.5301\n\t0200.5e10.0000.0001\n\t0000.0000.fe80.0000.0000.0000.0200.5e10.0000.0001\n"
      },
      "sortText": "00081",
      "filterText": "ParseMAC",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ParseMAC"
      }
    },
    {
      "label": "Pipe",
      "kind": 3,
      "detail": "func() (net.Conn, net.Conn)",
      "documentation": {
        "kind": "markdown",
        "value": "Pipe creates a synchronous, in-memory, full duplex network connection; both ends implement the Conn interface. Reads on one end are matched with writes on the other, copying data directly between the two; there is no internal buffering.\n"
      },
      "sortText": "00082",
      "filterText": "Pipe",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Pipe"
      }
    },
    {
      "label": "ResolveIPAddr",
      "kind": 3,
      "detail": "func(network string, address string) (*net.IPAddr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ResolveIPAddr returns an address of IP end point.\n\nThe network must be an IP network name.\n\nIf the host in the address parameter is not a literal IP address, ResolveIPAddr resolves the address to an address of IP end point. Otherwise, it parses the address as a literal IP address. The address parameter can use a host name, but this is not recommended, because it will return at most one of the host name's IP addresses.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00083",
      "filterText": "ResolveIPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ResolveIPAddr"
      }
    },
    {
      "label": "ResolveTCPAddr",
      "kind": 3,
      "detail": "func(network string, address string) (*net.TCPAddr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ResolveTCPAddr returns an address of TCP end point.\n\nThe network must be a TCP network name.\n\nIf the host in the address parameter is not a literal IP address or the port is not a literal port number, ResolveTCPAddr resolves the address to an address of TCP end point. Otherwise, it parses the address as a pair of literal IP address and port number. The address parameter can use a host name, but this is not recommended, because it will return at most one of the host name's IP addresses.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00084",
      "filterText": "ResolveTCPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ResolveTCPAddr"
      }
    },
    {
      "label": "ResolveUDPAddr",
      "kind": 3,
      "detail": "func(network string, address string) (*net.UDPAddr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ResolveUDPAddr returns an address of UDP end point.\n\nThe network must be a UDP network name.\n\nIf the host in the address parameter is not a literal IP address or the port is not a literal port number, ResolveUDPAddr resolves the address to an address of UDP end point. Otherwise, it parses the address as a pair of literal IP address and port number. The address parameter can use a host name, but this is not recommended, because it will return at most one of the host name's IP addresses.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00085",
      "filterText": "ResolveUDPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ResolveUDPAddr"
      }
    },
    {
      "label": "ResolveUnixAddr",
      "kind": 3,
      "detail": "func(network string, address string) (*net.UnixAddr, error)",
      "documentation": {
        "kind": "markdown",
        "value": "ResolveUnixAddr returns an address of Unix domain socket end point.\n\nThe network must be a Unix network name.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00086",
      "filterText": "ResolveUnixAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "ResolveUnixAddr"
      }
    },
    {
      "label": "Resolver",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A Resolver looks up names and numbers.\n\nA nil \\*Resolver is equivalent to a zero Resolver.\n"
      },
      "sortText": "00087",
      "filterText": "Resolver",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "Resolver"
      }
    },
    {
      "label": "SRV",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "An SRV represents a single DNS SRV record.\n"
      },
      "sortText": "00088",
      "filterText": "SRV",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "SRV"
      }
    },
    {
      "label": "SplitHostPort",
      "kind": 3,
      "detail": "func(hostport string) (host string, port string, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "SplitHostPort splits a network address of the form \"host:port\", \"host%zone:port\", \"\\[host]:port\" or \"\\[host%zone]:port\" into host or host%zone and port.\n\nA literal IPv6 address in hostport must be enclosed in square brackets, as in \"\\[::1]:80\", \"\\[::1%lo0]:80\".\n\nSee func Dial for a description of the hostport parameter, and host and port results.\n"
      },
      "sortText": "00089",
      "filterText": "SplitHostPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "SplitHostPort"
      }
    },
    {
      "label": "TCPAddr",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "TCPAddr represents the address of a TCP end point.\n"
      },
      "sortText": "00090",
      "filterText": "TCPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "TCPAddr"
      }
    },
    {
      "label": "TCPAddrFromAddrPort",
      "kind": 3,
      "detail": "func(addr netip.AddrPort) *net.TCPAddr",
      "documentation": {
        "kind": "markdown",
        "value": "TCPAddrFromAddrPort returns addr as a TCPAddr. If addr.IsValid() is false, then the returned TCPAddr will contain a nil IP field, indicating an address family-agnostic unspecified address.\n"
      },
      "sortText": "00091",
      "filterText": "TCPAddrFromAddrPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "TCPAddrFromAddrPort"
      }
    },
    {
      "label": "TCPConn",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "TCPConn is an implementation of the Conn interface for TCP network connections.\n"
      },
      "sortText": "00092",
      "filterText": "TCPConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "TCPConn"
      }
    },
    {
      "label": "TCPListener",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "TCPListener is a TCP network listener. Clients should typically use variables of type Listener instead of assuming TCP.\n"
      },
      "sortText": "00093",
      "filterText": "TCPListener",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "TCPListener"
      }
    },
    {
      "label": "UDPAddr",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UDPAddr represents the address of a UDP end point.\n"
      },
      "sortText": "00094",
      "filterText": "UDPAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UDPAddr"
      }
    },
    {
      "label": "UDPAddrFromAddrPort",
      "kind": 3,
      "detail": "func(addr netip.AddrPort) *net.UDPAddr",
      "documentation": {
        "kind": "markdown",
        "value": "UDPAddrFromAddrPort returns addr as a UDPAddr. If addr.IsValid() is false, then the returned UDPAddr will contain a nil IP field, indicating an address family-agnostic unspecified address.\n"
      },
      "sortText": "00095",
      "filterText": "UDPAddrFromAddrPort",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UDPAddrFromAddrPort"
      }
    },
    {
      "label": "UDPConn",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UDPConn is the implementation of the Conn and PacketConn interfaces for UDP network connections.\n"
      },
      "sortText": "00096",
      "filterText": "UDPConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UDPConn"
      }
    },
    {
      "label": "UnixAddr",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UnixAddr represents the address of a Unix domain socket end point.\n"
      },
      "sortText": "00097",
      "filterText": "UnixAddr",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UnixAddr"
      }
    },
    {
      "label": "UnixConn",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UnixConn is an implementation of the Conn interface for connections to Unix domain sockets.\n"
      },
      "sortText": "00098",
      "filterText": "UnixConn",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UnixConn"
      }
    },
    {
      "label": "UnixListener",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "UnixListener is a Unix domain socket listener. Clients should typically use variables of type Listener instead of assuming Unix domain sockets.\n"
      },
      "sortText": "00099",
      "filterText": "UnixListener",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UnixListener"
      }
    },
    {
      "label": "UnknownNetworkError",
      "kind": 7,
      "detail": "string",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00100",
      "filterText": "UnknownNetworkError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "UnknownNetworkError"
      }
    },
    {
      "label": "DefaultResolver.Dial",
      "kind": 5,
      "detail": "func(ctx context.Context, network, address string) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Dial optionally specifies an alternate dialer for use by Go's built-in DNS resolver to make TCP and UDP connections to DNS services. The host in the address parameter will always be a literal IP address and not a host name, and the port in the address parameter will be a literal port number and not a service name. If the Conn returned is also a PacketConn, sent and received DNS messages must adhere to RFC 1035 section 4.2.1, \"UDP usage\". Otherwise, DNS messages transmitted over Conn must adhere to RFC 7766 section 5, \"Transport Protocol Selection\". If nil, the default dialer is used.\n"
      },
      "sortText": "00101",
      "filterText": "DefaultResolver.Dial",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DefaultResolver.Dial"
      }
    },
    {
      "label": "DefaultResolver.PreferGo",
      "kind": 5,
      "detail": "bool",
      "documentation": {
        "kind": "markdown",
        "value": "PreferGo controls whether Go's built-in DNS resolver is preferred on platforms where it's available. It is equivalent to setting GODEBUG=netdns=go, but scoped to just this resolver.\n"
      },
      "sortText": "00102",
      "filterText": "DefaultResolver.PreferGo",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DefaultResolver.PreferGo"
      }
    },
    {
      "label": "DefaultResolver.StrictErrors",
      "kind": 5,
      "detail": "bool",
      "documentation": {
        "kind": "markdown",
        "value": "StrictErrors controls the behavior of temporary errors (including timeout, socket errors, and SERVFAIL) when using Go's built-in resolver. For a query composed of multiple sub-queries (such as an A+AAAA address lookup, or walking the DNS search list), this option causes such errors to abort the whole query instead of returning a partial result. This is not enabled by default because it may affect compatibility with resolvers that process AAAA queries incorrectly.\n"
      },
      "sortText": "00103",
      "filterText": "DefaultResolver.StrictErrors",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 5
          }
        },
        "newText": "DefaultResolver.StrictErrors"
      }
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 5
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 11,
        "character": 5
      },
      "end": {
        "line": 11,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 15,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 5
        },
        "end": {
          "line": 11,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "d"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 6
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 15,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 5
        },
        "end": {
          "line": 11,
          "character": 6
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: net.d"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "DNSConfigError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "DNSConfigError represents an error reading the machine's DNS configuration. (No longer used; kept for compatibility.)\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "DNSConfigError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DNSConfigError"
      }
    },
    {
      "label": "DNSError",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "DNSError represents a DNS lookup error.\n"
      },
      "sortText": "00001",
      "filterText": "DNSError",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DNSError"
      }
    },
    {
      "label": "DefaultResolver",
      "kind": 6,
      "detail": "*net.Resolver",
      "documentation": {
        "kind": "markdown",
        "value": "DefaultResolver is the resolver used by the package-level Lookup functions and by Dialers without a specified Resolver.\n"
      },
      "sortText": "00002",
      "filterText": "DefaultResolver",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DefaultResolver"
      }
    },
    {
      "label": "Dial",
      "kind": 3,
      "detail": "func(network string, address string) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Dial connects to the address on the named network.\n\nKnown networks are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".\n\nFor TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"\\[2001:db8::1]:80\" or \"\\[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007. The functions JoinHostPort and SplitHostPort manipulate a pair of host and port in this form. When using TCP, and the host resolves to multiple IP addresses, Dial will try each IP address in order until one succeeds.\n\nExamples:\n\n\tDial(\"tcp\", \"golang.org:http\")\n\tDial(\"tcp\", \"192.0.2.1:http\")\n\tDial(\"tcp\", \"198.51.100.1:80\")\n\tDial(\"udp\", \"[2001:db8::1]:domain\")\n\tDial(\"udp\", \"[fe80::1%lo0]:53\")\n\tDial(\"tcp\", \":80\")\n\nFor IP networks, the network must be \"ip\", \"ip4\" or \"ip6\" followed by a colon and a literal protocol number or a protocol name, and the address has the form \"host\". The host must be a literal IP address or a literal IPv6 address with zone. It depends on each operating system how the operating system behaves with a non-well known protocol number such as \"0\" or \"255\".\n\nExamples:\n\n\tDial(\"ip4:1\", \"192.0.2.1\")\n\tDial(\"ip6:ipv6-icmp\", \"2001:db8::1\")\n\tDial(\"ip6:58\", \"fe80::1%lo0\")\n\nFor TCP, UDP and IP networks, if the host is empty or a literal unspecified IP address, as in \":80\", \"0.0.0.0:80\" or \"\\[::]:80\" for TCP and UDP, \"\", \"0.0.0.0\" or \"::\" for IP, the local system is assumed.\n\nFor Unix networks, the address must be a file system path.\n"
      },
      "sortText": "00003",
      "filterText": "Dial",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "Dial"
      }
    },
    {
      "label": "DialIP",
      "kind": 3,
      "detail": "func(network string, laddr *net.IPAddr, raddr *net.IPAddr) (*net.IPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialIP acts like Dial for IP networks.\n\nThe network must be an IP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00004",
      "filterText": "DialIP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DialIP"
      }
    },
    {
      "label": "DialTCP",
      "kind": 3,
      "detail": "func(network string, laddr *net.TCPAddr, raddr *net.TCPAddr) (*net.TCPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialTCP acts like Dial for TCP networks.\n\nThe network must be a TCP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00005",
      "filterText": "DialTCP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DialTCP"
      }
    },
    {
      "label": "DialTimeout",
      "kind": 3,
      "detail": "func(network string, address string, timeout time.Duration) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialTimeout acts like Dial but takes a timeout.\n\nThe timeout includes name resolution, if required. When using TCP, and the host in the address parameter resolves to multiple IP addresses, the timeout is spread over each consecutive dial, such that each is given an appropriate fraction of the time to connect.\n\nSee func Dial for a description of the network and address parameters.\n"
      },
      "sortText": "00006",
      "filterText": "DialTimeout",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DialTimeout"
      }
    },
    {
      "label": "DialUDP",
      "kind": 3,
      "detail": "func(network string, laddr *net.UDPAddr, raddr *net.UDPAddr) (*net.UDPConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialUDP acts like Dial for UDP networks.\n\nThe network must be a UDP network name; see func Dial for details.\n\nIf laddr is nil, a local address is automatically chosen. If the IP field of raddr is nil or an unspecified IP address, the local system is assumed.\n"
      },
      "sortText": "00007",
      "filterText": "DialUDP",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DialUDP"
      }
    },
    {
      "label": "DialUnix",
      "kind": 3,
      "detail": "func(network string, laddr *net.UnixAddr, raddr *net.UnixAddr) (*net.UnixConn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "DialUnix acts like Dial for Unix networks.\n\nThe network must be a Unix network name; see func Dial for details.\n\nIf laddr is non-nil, it is used as the local address for the connection.\n"
      },
      "sortText": "00008",
      "filterText": "DialUnix",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DialUnix"
      }
    },
    {
      "label": "Dialer",
      "kind": 22,
      "detail": "struct{...}",
      "documentation": {
        "kind": "markdown",
        "value": "A Dialer contains options for connecting to an address.\n\nThe zero value for each field is equivalent to dialing without that option. Dialing with the zero value of Dialer is therefore equivalent to just calling the Dial function.\n\nIt is safe to call Dialer's methods concurrently.\n"
      },
      "sortText": "00009",
      "filterText": "Dialer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "Dialer"
      }
    },
    {
      "label": "DefaultResolver.Dial",
      "kind": 5,
      "detail": "func(ctx context.Context, network, address string) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Dial optionally specifies an alternate dialer for use by Go's built-in DNS resolver to make TCP and UDP connections to DNS services. The host in the address parameter will always be a literal IP address and not a host name, and the port in the address parameter will be a literal port number and not a service name. If the Conn returned is also a PacketConn, sent and received DNS messages must adhere to RFC 1035 section 4.2.1, \"UDP usage\". Otherwise, DNS messages transmitted over Conn must adhere to RFC 7766 section 5, \"Transport Protocol Selection\". If nil, the default dialer is used.\n"
      },
      "sortText": "00010",
      "filterText": "DefaultResolver.Dial",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DefaultResolver.Dial"
      }
    },
    {
      "label": "DefaultResolver.PreferGo",
      "kind": 5,
      "detail": "bool",
      "documentation": {
        "kind": "markdown",
        "value": "PreferGo controls whether Go's built-in DNS resolver is preferred on platforms where it's available. It is equivalent to setting GODEBUG=netdns=go, but scoped to just this resolver.\n"
      },
      "sortText": "00011",
      "filterText": "DefaultResolver.PreferGo",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DefaultResolver.PreferGo"
      }
    },
    {
      "label": "DefaultResolver.StrictErrors",
      "kind": 5,
      "detail": "bool",
      "documentation": {
        "kind": "markdown",
        "value": "StrictErrors controls the behavior of temporary errors (including timeout, socket errors, and SERVFAIL) when using Go's built-in resolver. For a query composed of multiple sub-queries (such as an A+AAAA address lookup, or walking the DNS search list), this option causes such errors to abort the whole query instead of returning a partial result. This is not enabled by default because it may affect compatibility with resolvers that process AAAA queries incorrectly.\n"
      },
      "sortText": "00012",
      "filterText": "DefaultResolver.StrictErrors",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 11,
            "character": 5
          },
          "end": {
            "line": 11,
            "character": 6
          }
        },
        "newText": "DefaultResolver.StrictErrors"
      }
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 6
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 11,
        "character": 5
      },
      "end": {
        "line": 11,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 16,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 5
        },
        "end": {
          "line": 11,
          "character": 6
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 17,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 5
        },
        "end": {
          "line": 11,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "Dial"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 16,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 13,
          "character": 0
        },
        "end": {
          "line": 13,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found 'if'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 17,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 9
        }
      },
      "severity": 1,
      "code": "UnusedExpr",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedExpr"
      },
      "source": "compiler",
      "message": "net.Dial (value of type func(network string, address string) (net.Conn, error)) is not used"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 22
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 11,
        "character": 5
      },
      "end": {
        "line": 11,
        "character": 9
      }
    },
    "kind": 1
  }
]
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 17,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 9
        }
      },
      "severity": 1,
      "code": "UnusedExpr",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedExpr"
      },
      "source": "compiler",
      "message": "net.Dial (value of type func(network string, address string) (net.Conn, error)) is not used"
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 18,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 9
        },
        "end": {
          "line": 11,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": "("
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/signatureHelp {
  "context": {
    "triggerKind": 2,
    "triggerCharacter": "(",
    "isRetrigger": null
  },
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 10
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 18,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 13,
          "character": 1
        },
        "end": {
          "line": 13,
          "character": 1
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found 'if'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- response: {
  "signatures": [
    {
      "label": "Dial(network string, address string) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Dial connects to the address on the named network.\n\nKnown networks are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".\n\nFor TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"\\[2001:db8::1]:80\" or \"\\[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007. The functions JoinHostPort and SplitHostPort manipulate a pair of host and port in this form. When using TCP, and the host resolves to multiple IP addresses, Dial will try each IP address in order until one succeeds.\n\nExamples:\n\n\tDial(\"tcp\", \"golang.org:http\")\n\tDial(\"tcp\", \"192.0.2.1:http\")\n\tDial(\"tcp\", \"198.51.100.1:80\")\n\tDial(\"udp\", \"[2001:db8::1]:domain\")\n\tDial(\"udp\", \"[fe80::1%lo0]:53\")\n\tDial(\"tcp\", \":80\")\n\nFor IP networks, the network must be \"ip\", \"ip4\" or \"ip6\" followed by a colon and a literal protocol number or a protocol name, and the address has the form \"host\". The host must be a literal IP address or a literal IPv6 address with zone. It depends on each operating system how the operating system behaves with a non-well known protocol number such as \"0\" or \"255\".\n\nExamples:\n\n\tDial(\"ip4:1\", \"192.0.2.1\")\n\tDial(\"ip6:ipv6-icmp\", \"2001:db8::1\")\n\tDial(\"ip6:58\", \"fe80::1%lo0\")\n\nFor TCP, UDP and IP networks, if the host is empty or a literal unspecified IP address, as in \":80\", \"0.0.0.0:80\" or \"\\[::]:80\" for TCP and UDP, \"\", \"0.0.0.0\" or \"::\" for IP, the local system is assumed.\n\nFor Unix networks, the address must be a file system path."
      },
      "parameters": [
        {
          "label": "network string"
        },
        {
          "label": "address string"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 10
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 19,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 10
        },
        "end": {
          "line": 11,
          "character": 10
        }
      },
      "rangeLength": 0,
      "text": "\""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 19,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 10
        },
        "end": {
          "line": 11,
          "character": 10
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "string literal not terminated"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 11
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 20,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 11
        },
        "end": {
          "line": 11,
          "character": 11
        }
      },
      "rangeLength": 0,
      "text": "t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 12
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 21,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 12
        },
        "end": {
          "line": 11,
          "character": 12
        }
      },
      "rangeLength": 0,
      "text": "c"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 22,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 13
        },
        "end": {
          "line": 11,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "p"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 23,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 14
        },
        "end": {
          "line": 11,
          "character": 14
        }
      },
      "rangeLength": 0,
      "text": "\""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 23,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 15
        },
        "end": {
          "line": 11,
          "character": 15
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "missing ',' before newline in argument list"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 15
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 24,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 15
        },
        "end": {
          "line": 11,
          "character": 15
        }
      },
      "rangeLength": 0,
      "text": ","
    }
  ]
}
-> request: textDocument/signatureHelp {
  "context": {
    "triggerKind": 2,
    "triggerCharacter": ",",
    "isRetrigger": null
  },
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 16
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 24,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 13,
          "character": 1
        },
        "end": {
          "line": 13,
          "character": 1
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found 'if'"
    }
  ]
}
<- response: {
  "signatures": [
    {
      "label": "Dial(network string, address string) (net.Conn, error)",
      "documentation": {
        "kind": "markdown",
        "value": "Dial connects to the address on the named network.\n\nKnown networks are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".\n\nFor TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"\\[2001:db8::1]:80\" or \"\\[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007. The functions JoinHostPort and SplitHostPort manipulate a pair of host and port in this form. When using TCP, and the host resolves to multiple IP addresses, Dial will try each IP address in order until one succeeds.\n\nExamples:\n\n\tDial(\"tcp\", \"golang.org:http\")\n\tDial(\"tcp\", \"192.0.2.1:http\")\n\tDial(\"tcp\", \"198.51.100.1:80\")\n\tDial(\"udp\", \"[2001:db8::1]:domain\")\n\tDial(\"udp\", \"[fe80::1%lo0]:53\")\n\tDial(\"tcp\", \":80\")\n\nFor IP networks, the network must be \"ip\", \"ip4\" or \"ip6\" followed by a colon and a literal protocol number or a protocol name, and the address has the form \"host\". The host must be a literal IP address or a literal IPv6 address with zone. It depends on each operating system how the operating system behaves with a non-well known protocol number such as \"0\" or \"255\".\n\nExamples:\n\n\tDial(\"ip4:1\", \"192.0.2.1\")\n\tDial(\"ip6:ipv6-icmp\", \"2001:db8::1\")\n\tDial(\"ip6:58\", \"fe80::1%lo0\")\n\nFor TCP, UDP and IP networks, if the host is empty or a literal unspecified IP address, as in \":80\", \"0.0.0.0:80\" or \"\\[::]:80\" for TCP and UDP, \"\", \"0.0.0.0\" or \"::\" for IP, the local system is assumed.\n\nFor Unix networks, the address must be a file system path."
      },
      "parameters": [
        {
          "label": "network string"
        },
        {
          "label": "address string"
        }
      ]
    }
  ],
  "activeParameter": 1
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 25,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 16
        },
        "end": {
          "line": 11,
          "character": 16
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 17
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 25,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 13,
          "character": 1
        },
        "end": {
          "line": 13,
          "character": 1
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found 'if'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 17
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 26,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 17
        },
        "end": {
          "line": 11,
          "character": 17
        }
      },
      "rangeLength": 0,
      "text": "\""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 26,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 17
        },
        "end": {
          "line": 11,
          "character": 17
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "string literal not terminated"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 18
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 27,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 18
        },
        "end": {
          "line": 11,
          "character": 18
        }
      },
      "rangeLength": 0,
      "text": "l"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 28,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 19
        },
        "end": {
          "line": 11,
          "character": 19
        }
      },
      "rangeLength": 0,
      "text": "o"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 29,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 20
        },
        "end": {
          "line": 11,
          "character": 20
        }
      },
      "rangeLength": 0,
      "text": "c"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 30,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 21
        },
        "end": {
          "line": 11,
          "character": 21
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 31,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 22
        },
        "end": {
          "line": 11,
          "character": 22
        }
      },
      "rangeLength": 0,
      "text": "l"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 32,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 23
        },
        "end": {
          "line": 11,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "h"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 33,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 24
        },
        "end": {
          "line": 11,
          "character": 24
        }
      },
      "rangeLength": 0,
      "text": "o"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 34,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 25
        },
        "end": {
          "line": 11,
          "character": 25
        }
      },
      "rangeLength": 0,
      "text": "s"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 35,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 26
        },
        "end": {
          "line": 11,
          "character": 26
        }
      },
      "rangeLength": 0,
      "text": "t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 36,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 27
        },
        "end": {
          "line": 11,
          "character": 27
        }
      },
      "rangeLength": 0,
      "text": "'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 28
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 37,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 27
        },
        "end": {
          "line": 11,
          "character": 28
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 38,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 27
        },
        "end": {
          "line": 11,
          "character": 27
        }
      },
      "rangeLength": 0,
      "text": "\""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 38,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 28
        },
        "end": {
          "line": 11,
          "character": 28
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "missing ',' before newline in argument list"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 28
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 39,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 28
        },
        "end": {
          "line": 11,
          "character": 28
        }
      },
      "rangeLength": 0,
      "text": ")"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 39,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 29
  }
}
<- response: []
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
    "languageId": "go",
    "version": 40,
    "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\tnet.Dial(\"tcp\", \"localhost\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 40,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\tnet.Dial(\"tcp\", \"localhost\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 40,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 28
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 40,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 28
  }
}
<- response: []
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
    "languageId": "go",
    "version": 0,
    "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\tnet.Dial(\"tcp\", \"localhost\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
  }
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc client() {\n\t// connect to server\n\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\tnet.Dial(\"tcp\", \"localhost\")\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection established\")\n\t}\n\n\t// send message\n\tmsg := \"Hello World!\"\n\n\tfmt.Println(\"Sending: \", msg)\n\terr = gob.NewEncoder(conn).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Encoding error\")\n\t}\n\n\t// connection close\n\terr = conn.Close()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t} else {\n\t\tfmt.Println(\"Connection closed\")\n\t}\n}\n\nfunc main() {\n\tclient()\n}\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 28
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 47
        },
        "end": {
          "line": 10,
          "character": 47
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 1,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 2,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 2,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 3,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 12,
          "character": 0
        }
      },
      "rangeLength": 2,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 3,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 3,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 0
        },
        "end": {
          "line": 12,
          "character": 0
        }
      },
      "rangeLength": 78,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 41,
                "character": 5
              },
              "end": {
                "line": 41,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 41,
                "character": 5
              },
              "end": {
                "line": 41,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 41,
                "character": 5
              },
              "end": {
                "line": 41,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 41,
                "character": 5
              },
              "end": {
                "line": 41,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 6
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"net\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 11,
          "character": 4
        },
        "end": {
          "line": 11,
          "character": 7
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: err"
    },
    {
      "range": {
        "start": {
          "line": 12,
          "character": 14
        },
        "end": {
          "line": 12,
          "character": 17
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: err"
    },
    {
      "range": {
        "start": {
          "line": 22,
          "character": 1
        },
        "end": {
          "line": 22,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: err"
    },
    {
      "range": {
        "start": {
          "line": 22,
          "character": 22
        },
        "end": {
          "line": 22,
          "character": 26
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: conn"
    },
    {
      "range": {
        "start": {
          "line": 23,
          "character": 4
        },
        "end": {
          "line": 23,
          "character": 7
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: err"
    },
    {
      "range": {
        "start": {
          "line": 24,
          "character": 14
        },
        "end": {
          "line": 24,
          "character": 17
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: err"
    },
    {
      "range": {
        "start": {
          "line": 31,
          "character": 1
        },
        "end": {
          "line": 31,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: err"
    },
    {
      "range": {
        "start": {
          "line": 31,
          "character": 7
        },
        "end": {
          "line": 31,
          "character": 11
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: conn"
    },
    {
      "range": {
        "start": {
          "line": 33,
          "character": 4
        },
        "end": {
          "line": 33,
          "character": 7
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: err"
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 14
        },
        "end": {
          "line": 34,
          "character": 17
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: err"
    },
    {
      "range": {
        "start": {
          "line": 41,
          "character": 5
        },
        "end": {
          "line": 41,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 41,
                "character": 5
              },
              "end": {
                "line": 41,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 41,
          "character": 5
        },
        "end": {
          "line": 41,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 41,
                "character": 5
              },
              "end": {
                "line": 41,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 41,
          "character": 5
        },
        "end": {
          "line": 41,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 41,
                "character": 5
              },
              "end": {
                "line": 41,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 41,
          "character": 5
        },
        "end": {
          "line": 41,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 41,
                "character": 5
              },
              "end": {
                "line": 41,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 10,
          "character": 0
        },
        "end": {
          "line": 10,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\tconn, err := net.Dial(\"tcp\", \"127.0.0.1:9999\")\n\tnet.Dial(\"tcp\", \"localhost\")\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 12,
          "character": 0
        }
      },
      "rangeLength": 30,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\tnet.Dial(\"tcp\", \"localhost\")\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 13,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 12,
          "character": 0
        }
      },
      "rangeLength": 30,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\tnet.Dial(\"tcp\", \"localhost\")\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 4
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 14
      },
      "end": {
        "line": 10,
        "character": 17
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 11,
        "character": 1
      },
      "end": {
        "line": 11,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 12,
          "character": 0
        }
      },
      "rangeLength": 30,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\tnet.Dial(\"tcp\", \"localhost\")\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 1
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 10,
        "character": 1
      },
      "end": {
        "line": 10,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 24,
        "character": 22
      },
      "end": {
        "line": 24,
        "character": 26
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 33,
        "character": 7
      },
      "end": {
        "line": 33,
        "character": 11
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 11,
        "character": 1
      },
      "end": {
        "line": 11,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 10,
        "character": 14
      },
      "end": {
        "line": 10,
        "character": 17
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 7
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 11,
        "character": 5
      },
      "end": {
        "line": 11,
        "character": 9
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 10,
        "character": 18
      },
      "end": {
        "line": 10,
        "character": 22
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 12,
          "character": 0
        }
      },
      "rangeLength": 30,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 42,
          "character": 5
        },
        "end": {
          "line": 42,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 42,
                "character": 5
              },
              "end": {
                "line": 42,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\tnet.Dial(\"tcp\", \"localhost\")\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 12,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 10,
    "character": 47
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 29
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 11,
          "character": 0
        },
        "end": {
          "line": 11,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpClient.go"
  },
  "position": {
    "line": 11,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 44,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 44,
                "character": 5
              },
              "end": {
                "line": 44,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: initialize {
  "processId": 8027,
  "clientInfo": {
    "name": "lem"
  },
  "rootUri": "file:///home/max/uni/golang/socket/",
  "capabilities": {
    "workspace": {},
    "textDocument": {
      "synchronization": {
        "didSave": true
      },
      "completion": {
        "completionItem": {
          "snippetSupport": null
        },
        "contextSupport": true
      },
      "hover": {},
      "signatureHelp": {
        "signatureInformation": {
          "documentationFormat": [
            "plaintext",
            "markdown"
          ],
          "parameterInformation": {
            "labelOffsetSupport": true
          },
          "activeParameterSupport": true
        },
        "contextSupport": true
      },
      "definition": {
        "linkSupport": null
      },
      "typeDefinition": {
        "linkSupport": null
      },
      "implementation": {
        "linkSupport": null
      },
      "references": {},
      "documentSymbol": {
        "hierarchicalDocumentSymbolSupport": true
      },
      "codeAction": {},
      "formatting": {},
      "rangeFormatting": {},
      "onTypeFormatting": {},
      "rename": {},
      "publishDiagnostics": {
        "relatedInformation": true
      }
    }
  },
  "initializationOptions": {
    "completeUnimported": true,
    "matcher": "fuzzy"
  },
  "trace": "off",
  "workspaceFolders": null
}
<- response: {
  "capabilities": {
    "textDocumentSync": {
      "openClose": true,
      "change": 2,
      "save": {}
    },
    "completionProvider": {
      "triggerCharacters": [
        "."
      ]
    },
    "hoverProvider": true,
    "signatureHelpProvider": {
      "triggerCharacters": [
        "(",
        ","
      ]
    },
    "definitionProvider": true,
    "typeDefinitionProvider": true,
    "implementationProvider": true,
    "referencesProvider": true,
    "documentHighlightProvider": true,
    "documentSymbolProvider": true,
    "codeActionProvider": true,
    "codeLensProvider": {},
    "documentLinkProvider": {},
    "workspaceSymbolProvider": true,
    "documentFormattingProvider": true,
    "renameProvider": true,
    "foldingRangeProvider": true,
    "selectionRangeProvider": true,
    "executeCommandProvider": {
      "commands": [
        "gopls.add_dependency",
        "gopls.add_import",
        "gopls.apply_fix",
        "gopls.check_upgrades",
        "gopls.edit_go_directive",
        "gopls.fetch_vulncheck_result",
        "gopls.gc_details",
        "gopls.generate",
        "gopls.go_get_package",
        "gopls.list_imports",
        "gopls.list_known_packages",
        "gopls.mem_stats",
        "gopls.regenerate_cgo",
        "gopls.remove_dependency",
        "gopls.reset_go_mod_diagnostics",
        "gopls.run_go_work_command",
        "gopls.run_govulncheck",
        "gopls.run_tests",
        "gopls.start_debugging",
        "gopls.start_profile",
        "gopls.stop_profile",
        "gopls.test",
        "gopls.tidy",
        "gopls.toggle_gc_details",
        "gopls.update_go_sum",
        "gopls.upgrade_dependency",
        "gopls.vendor",
        "gopls.workspace_stats"
      ]
    },
    "callHierarchyProvider": true,
    "semanticTokensProvider": {
      "legend": {
        "tokenTypes": [],
        "tokenModifiers": []
      },
      "range": true,
      "full": true
    },
    "inlayHintProvider": {},
    "workspace": {
      "workspaceFolders": {
        "supported": true,
        "changeNotifications": "workspace/didChangeWorkspaceFolders"
      }
    }
  },
  "serverInfo": {
    "name": "gopls",
    "version": "{\"GoVersion\":\"go1.21.0\",\"Path\":\"golang.org/x/tools/gopls\",\"Main\":{\"Path\":\"golang.org/x/tools/gopls\",\"Version\":\"(devel)\",\"Sum\":\"\",\"Replace\":null},\"Deps\":[{\"Path\":\"github.com/BurntSushi/toml\",\"Version\":\"v1.2.1\",\"Sum\":\"h1:9F2/+DoOYIOksmaJFPw1tGFy1eDnIJXg+UHjuD8lTak=\",\"Replace\":null},{\"Path\":\"github.com/google/go-cmp\",\"Version\":\"v0.5.9\",\"Sum\":\"h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\",\"Replace\":null},{\"Path\":\"github.com/sergi/go-diff\",\"Version\":\"v1.1.0\",\"Sum\":\"h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=\",\"Replace\":null},{\"Path\":\"golang.org/x/exp\",\"Version\":\"v0.0.0-20220722155223-a9213eeb770e\",\"Sum\":\"h1:+WEEuIdZHnUeJJmEUjyYC2gfUMj69yZXw17EnHg/otA=\",\"Replace\":null},{\"Path\":\"golang.org/x/exp/typeparams\",\"Version\":\"v0.0.0-20221212164502-fae10dda9338\",\"Sum\":\"h1:2O2DON6y3XMJiQRAS1UWU+54aec2uopH3x7MAiqGW6Y=\",\"Replace\":null},{\"Path\":\"golang.org/x/mod\",\"Version\":\"v0.12.0\",\"Sum\":\"h1:rmsUpXtvNzj340zd98LZ4KntptpfRHwpFOHG188oHXc=\",\"Replace\":null},{\"Path\":\"golang.org/x/sync\",\"Version\":\"v0.3.0\",\"Sum\":\"h1:ftCYgMx6zT/asHUrPw8BLLscYtGznsLAnjq5RH9P66E=\",\"Replace\":null},{\"Path\":\"golang.org/x/sys\",\"Version\":\"v0.10.0\",\"Sum\":\"h1:SqMFp9UcQJZa+pmYuAKjd9xq1f0j5rLcDIk0mj4qAsA=\",\"Replace\":null},{\"Path\":\"golang.org/x/text\",\"Version\":\"v0.11.0\",\"Sum\":\"h1:LAntKIrcmeSKERyiOh0XMV39LXS8IE9UL2yP7+f5ij4=\",\"Replace\":null},{\"Path\":\"golang.org/x/tools\",\"Version\":\"v0.11.2-0.20230810185051-cc6b5804b8cf\",\"Sum\":\"h1:Oush7UwPamr2/iNeNFBuNFj89YyHn0YY69EKDdvANnk=\",\"Replace\":null},{\"Path\":\"golang.org/x/vuln\",\"Version\":\"v0.0.0-20230110180137-6ad3e3d07815\",\"Sum\":\"h1:A9kONVi4+AnuOr1dopsibH6hLi1Huy54cbeJxnq4vmU=\",\"Replace\":null},{\"Path\":\"honnef.co/go/tools\",\"Version\":\"v0.4.2\",\"Sum\":\"h1:6qXr+R5w+ktL5UkwEbPp+fEvfyoMPche6GkOpGHZcLc=\",\"Replace\":null},{\"Path\":\"mvdan.cc/gofumpt\",\"Version\":\"v0.4.0\",\"Sum\":\"h1:JVf4NN1mIpHogBj7ABpgOyZc65/UUOkKQFkoURsz4MM=\",\"Replace\":null},{\"Path\":\"mvdan.cc/xurls/v2\",\"Version\":\"v2.4.0\",\"Sum\":\"h1:tzxjVAj+wSBmDcF6zBB7/myTy3gX9xvi8Tyr28AuQgc=\",\"Replace\":null}],\"Settings\":[{\"Key\":\"-buildmode\",\"Value\":\"pie\"},{\"Key\":\"-compiler\",\"Value\":\"gc\"},{\"Key\":\"-ldflags\",\"Value\":\"-compressdwarf=false     -linkmode external     -extldflags -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now\"},{\"Key\":\"DefaultGODEBUG\",\"Value\":\"panicnil=1\"},{\"Key\":\"CGO_ENABLED\",\"Value\":\"1\"},{\"Key\":\"CGO_CFLAGS\",\"Value\":\"-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/gopls/src=/usr/src/debug/gopls\"},{\"Key\":\"CGO_CPPFLAGS\",\"Value\":\"\"},{\"Key\":\"CGO_CXXFLAGS\",\"Value\":\"-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -Wp,-D_GLIBCXX_ASSERTIONS -g -ffile-prefix-map=/build/gopls/src=/usr/src/debug/gopls\"},{\"Key\":\"CGO_LDFLAGS\",\"Value\":\"\"},{\"Key\":\"GOARCH\",\"Value\":\"amd64\"},{\"Key\":\"GOOS\",\"Value\":\"linux\"},{\"Key\":\"GOAMD64\",\"Value\":\"v1\"}],\"Version\":\"v0.13.2\"}"
  }
}
notify: initialized {}
<- request: window/showMessage {
  "type": 4,
  "message": "Loading packages..."
}
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
    "languageId": "go",
    "version": 0,
    "text": "package main\n\nimport (\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"net\"\n)\n\nfunc server() {\n\t// listen on a port\n\tconst port = \":9999\"\n\tln, err := net.Listen(\"tcp\", port)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t} else {\n\t\tfmt.Println(\"Server is running and listening on port\", port, \"\\n\")\n\t}\n\n\t// while true\n\tfor {\n\t\t// accept a connection on listening port\n\t\tc, err := ln.Accept()\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tcontinue\n\t\t} else {\n\t\t\tfmt.Println(\"A client connection was accecpted\")\n\t\t}\n\n\t\t// handle the server connection as go thread\n\t\tgo handleServerConnection(c)\n\t}\n}\n\nfunc handleServerConnection(c net.Conn) {\n\t// receive the message and decode\n\tvar msg string\n\terr := gob.NewDecoder(c).Decode(&msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t} else {\n\t\tfmt.Println(\"Received:\", msg)\n\t}\n\n\tanswer := \"welcome from server!\"\n\tfmt.Println(\"sending: \", answer)\n\terr = gob.NewEncoder(c).Encode(msg)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t} else {\n\t\tfmt.Println(\"Message sent!\")\n\t}\n\n\t// close connection\n\terr = c.Close()\n\tif err != nil {\n\t\tfmt.Println(err)\n\t} else {\n\t\tfmt.Println(\"A client connection was closed\\n\")\n\t}\n}\n\nfunc main() {\n\tgo server()\n\tfmt.Println(\"Server started.\\nPress enter to terminate.\\n\")\n\tvar input string\n\tfmt.Scanln(&input)\n}\n"
  }
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:47:53 go info for /home/max/uni/golang/socket/\n(go dir /home/max/uni/golang/socket/)\n(go version go version go1.21.3 linux/amd64)\n(valid build configuration = false)\n(build flags: [])\n(selected go env: [GO111MODULE=, GOCACHE=/home/max/.cache/go-build, GOFLAGS=, GOMODCACHE=/home/max/go/pkg/mod, GOPATH=/home/max/go, GOPRIVATE=, GOROOT=/usr/lib/go, GOWORK=])\n\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:47:53 go/packages.Load #1\n\tsnapshot=0\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./ builtin]\n\tpackages=2\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:47:53 go/packages.Load #1: updating metadata for 60 packages\n"
}
<- request: window/showMessage {
  "type": 3,
  "message": "Finished loading packages."
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 4,
    "character": 4
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 56,
        "character": 2
      },
      "end": {
        "line": 56,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 15,
        "character": 2
      },
      "end": {
        "line": 15,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 45,
        "character": 1
      },
      "end": {
        "line": 45,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 64,
        "character": 1
      },
      "end": {
        "line": 64,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 13,
        "character": 2
      },
      "end": {
        "line": 13,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 39,
        "character": 2
      },
      "end": {
        "line": 39,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 50,
        "character": 2
      },
      "end": {
        "line": 50,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 58,
        "character": 2
      },
      "end": {
        "line": 58,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 23,
        "character": 3
      },
      "end": {
        "line": 23,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 48,
        "character": 2
      },
      "end": {
        "line": 48,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 41,
        "character": 2
      },
      "end": {
        "line": 41,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 66,
        "character": 1
      },
      "end": {
        "line": 66,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 4,
        "character": 1
      },
      "end": {
        "line": 4,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 26,
        "character": 3
      },
      "end": {
        "line": 26,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 3
        },
        "end": {
          "line": 4,
          "character": 4
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:47:57 go/packages.Load #2\n\tsnapshot=2\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./]\n\tpackages=1\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:47:57 go/packages.Load #2: updating metadata for 1 packages\n"
}
<- request: window/logMessage {
  "type": 1,
  "message": "2023/10/28 18:47:57 unable to compute deps errors: stat : no such file or directory\n\tpackage=\"_/home/max/uni/golang/socket\"\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 1
        },
        "end": {
          "line": 4,
          "character": 5
        }
      },
      "severity": 1,
      "code": "BrokenImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#BrokenImport"
      },
      "source": "compiler",
      "message": "could not import ft (cannot find package \"ft\" in GOROOT or GOPATH)"
    },
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 13,
          "character": 2
        },
        "end": {
          "line": 13,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 15,
          "character": 2
        },
        "end": {
          "line": 15,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 23,
          "character": 3
        },
        "end": {
          "line": 23,
          "character": 6
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 26,
          "character": 3
        },
        "end": {
          "line": 26,
          "character": 6
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 39,
          "character": 2
        },
        "end": {
          "line": 39,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 41,
          "character": 2
        },
        "end": {
          "line": 41,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 45,
          "character": 1
        },
        "end": {
          "line": 45,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 48,
          "character": 2
        },
        "end": {
          "line": 48,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 50,
          "character": 2
        },
        "end": {
          "line": 50,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 56,
          "character": 2
        },
        "end": {
          "line": 56,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 58,
          "character": 2
        },
        "end": {
          "line": 58,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 64,
          "character": 1
        },
        "end": {
          "line": 64,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    },
    {
      "range": {
        "start": {
          "line": 66,
          "character": 1
        },
        "end": {
          "line": 66,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 4,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 1
      },
      "end": {
        "line": 4,
        "character": 5
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 5,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 34,
        "character": 30
      },
      "end": {
        "line": 34,
        "character": 33
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 11,
        "character": 12
      },
      "end": {
        "line": 11,
        "character": 15
      }
    },
    "kind": 1
  }
]
<- request: window/showMessage {
  "type": 4,
  "message": "You are outside of a module and outside of $GOPATH/src. If you are using modules, please open your editor to a directory in your module. If you believe this warning is incorrect, please file an issue: https://github.com/golang/go/issues/new."
}
<- request: window/logMessage {
  "type": 1,
  "message": "2023/10/28 18:47:58 errors loading workspace: You are outside of a module and outside of $GOPATH/src.\nIf you are using modules, please open your editor to a directory in your module.\nIf you believe this warning is incorrect, please file an issue: https://github.com/golang/go/issues/new.\n\tsnapshot=2\n\tdirectory=file:///home/max/uni/golang/socket/\n"
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 7,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 4,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 1
      },
      "end": {
        "line": 4,
        "character": 5
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 5,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 11,
        "character": 12
      },
      "end": {
        "line": 11,
        "character": 15
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 34,
        "character": 30
      },
      "end": {
        "line": 34,
        "character": 33
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 4,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 1
      },
      "end": {
        "line": 4,
        "character": 5
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 1,
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 3
        },
        "end": {
          "line": 4,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:07 go/packages.Load #3\n\tsnapshot=3\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./]\n\tpackages=1\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:07 go/packages.Load #3: updating metadata for 1 packages\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "version": 1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 4,
    "character": 4
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 50,
        "character": 2
      },
      "end": {
        "line": 50,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 66,
        "character": 1
      },
      "end": {
        "line": 66,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 56,
        "character": 2
      },
      "end": {
        "line": 56,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 4,
        "character": 1
      },
      "end": {
        "line": 4,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 41,
        "character": 2
      },
      "end": {
        "line": 41,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 45,
        "character": 1
      },
      "end": {
        "line": 45,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 48,
        "character": 2
      },
      "end": {
        "line": 48,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 64,
        "character": 1
      },
      "end": {
        "line": 64,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 13,
        "character": 2
      },
      "end": {
        "line": 13,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 15,
        "character": 2
      },
      "end": {
        "line": 15,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 23,
        "character": 3
      },
      "end": {
        "line": 23,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 26,
        "character": 3
      },
      "end": {
        "line": 26,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 39,
        "character": 2
      },
      "end": {
        "line": 39,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 58,
        "character": 2
      },
      "end": {
        "line": 58,
        "character": 5
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
<- request: window/showMessage {
  "type": 3,
  "message": "Done."
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 4,
    "character": 4
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 26,
        "character": 3
      },
      "end": {
        "line": 26,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 56,
        "character": 2
      },
      "end": {
        "line": 56,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 58,
        "character": 2
      },
      "end": {
        "line": 58,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 4,
        "character": 1
      },
      "end": {
        "line": 4,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 23,
        "character": 3
      },
      "end": {
        "line": 23,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 41,
        "character": 2
      },
      "end": {
        "line": 41,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 50,
        "character": 2
      },
      "end": {
        "line": 50,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 64,
        "character": 1
      },
      "end": {
        "line": 64,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 66,
        "character": 1
      },
      "end": {
        "line": 66,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 45,
        "character": 1
      },
      "end": {
        "line": 45,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 48,
        "character": 2
      },
      "end": {
        "line": 48,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 13,
        "character": 2
      },
      "end": {
        "line": 13,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 15,
        "character": 2
      },
      "end": {
        "line": 15,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 39,
        "character": 2
      },
      "end": {
        "line": 39,
        "character": 5
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 8,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 8,
        "character": 5
      },
      "end": {
        "line": 8,
        "character": 11
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 11,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 11,
        "character": 1
      },
      "end": {
        "line": 11,
        "character": 3
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 21,
        "character": 12
      },
      "end": {
        "line": 21,
        "character": 14
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 18,
    "character": 2
  }
}
<- response: []
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go",
    "languageId": "go",
    "version": 0,
    "text": ""
  }
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:15 go/packages.Load #4\n\tsnapshot=4\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./]\n\tpackages=1\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:15 go/packages.Load #4: updating metadata for 1 packages\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 1,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 1,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 1,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 2,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 2,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 2,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found i"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 2,
    "character": 1
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 3,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 1
        },
        "end": {
          "line": 2,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 3,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found im"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 1
        },
        "end": {
          "line": 2,
          "character": 2
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 4,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found i"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 1
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 5,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 6,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "p"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 6,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found p"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 7,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 1
        },
        "end": {
          "line": 2,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 7,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found pa"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 8,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 2
        },
        "end": {
          "line": 2,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "c"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 8,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found pac"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 9,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 3
        },
        "end": {
          "line": 2,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "k"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 9,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found pack"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 10,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 4
        },
        "end": {
          "line": 2,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 10,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found packa"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 11,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 5
        },
        "end": {
          "line": 2,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "g"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 11,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found packag"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 12,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 6
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": "e"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 12,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 7
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 13,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 7
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 13,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 8
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 2,
    "character": 8
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 14,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 8
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 15,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 9
        },
        "end": {
          "line": 2,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 16,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 10
        },
        "end": {
          "line": 2,
          "character": 10
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 17,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 11
        },
        "end": {
          "line": 2,
          "character": 11
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:19 go/packages.Load #8\n\tsnapshot=22\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./]\n\tpackages=1\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:19 go/packages.Load #8: updating metadata for 1 packages\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 17,
  "diagnostics": []
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 18,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 11
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 19,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 10
        },
        "end": {
          "line": 2,
          "character": 11
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 20,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 9
        },
        "end": {
          "line": 2,
          "character": 10
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 21,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 8
        },
        "end": {
          "line": 2,
          "character": 9
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:19 go/packages.Load #12\n\tsnapshot=26\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./]\n\tpackages=1\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:19 go/packages.Load #12: updating metadata for 1 packages\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 21,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 8
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 22,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 8
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "rangeLength": 0,
      "text": "h"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 23,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 9
        },
        "end": {
          "line": 2,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": "e"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 24,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 10
        },
        "end": {
          "line": 2,
          "character": 10
        }
      },
      "rangeLength": 0,
      "text": "l"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 25,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 11
        },
        "end": {
          "line": 2,
          "character": 11
        }
      },
      "rangeLength": 0,
      "text": "l"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 26,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 12
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "rangeLength": 0,
      "text": "o"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 27,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 13
        },
        "end": {
          "line": 2,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:20 go/packages.Load #18\n\tsnapshot=32\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./]\n\tpackages=1\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:48:20 go/packages.Load #18: updating metadata for 1 packages\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 7
        }
      },
      "severity": 1,
      "code": "MismatchedPkgName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#MismatchedPkgName"
      },
      "source": "compiler",
      "message": "package main; expected hello"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 27,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "version": 1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 7
        }
      },
      "severity": 1,
      "code": "MismatchedPkgName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#MismatchedPkgName"
      },
      "source": "compiler",
      "message": "package main; expected hello"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 7
        }
      },
      "severity": 1,
      "code": "MismatchedPkgName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#MismatchedPkgName"
      },
      "source": "compiler",
      "message": "package main; expected hello"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 7
        }
      },
      "severity": 1,
      "code": "MismatchedPkgName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#MismatchedPkgName"
      },
      "source": "compiler",
      "message": "package main; expected hello"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 1
        },
        "end": {
          "line": 0,
          "character": 8
        }
      },
      "severity": 1,
      "code": "MismatchedPkgName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#MismatchedPkgName"
      },
      "source": "compiler",
      "message": "package main; expected hello"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 3,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 28,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 3,
          "character": 0
        },
        "end": {
          "line": 3,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 28,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 29,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 0
        },
        "end": {
          "line": 4,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "f"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 29,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 4,
          "character": 0
        },
        "end": {
          "line": 4,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected declaration, found f"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 30,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 1
        },
        "end": {
          "line": 4,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "u"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 30,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 4,
          "character": 0
        },
        "end": {
          "line": 4,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected declaration, found fu"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 31,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 2
        },
        "end": {
          "line": 4,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 31,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 4,
          "character": 0
        },
        "end": {
          "line": 4,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected declaration, found fun"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 32,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 3
        },
        "end": {
          "line": 4,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "c"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 32,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 4,
          "character": 4
        },
        "end": {
          "line": 4,
          "character": 4
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected '(', found 'EOF'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 4
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 4
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 33,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 3
        },
        "end": {
          "line": 4,
          "character": 4
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 33,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 4,
          "character": 0
        },
        "end": {
          "line": 4,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected declaration, found fun"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 34,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 3
        },
        "end": {
          "line": 4,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 4
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 35,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 4
        },
        "end": {
          "line": 4,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 36,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 5
        },
        "end": {
          "line": 4,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 37,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 6
        },
        "end": {
          "line": 4,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 38,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 7
        },
        "end": {
          "line": 4,
          "character": 7
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 8
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 39,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 8
        },
        "end": {
          "line": 4,
          "character": 8
        }
      },
      "rangeLength": 0,
      "text": "("
    }
  ]
}
-> request: textDocument/signatureHelp {
  "context": {
    "triggerKind": 2,
    "triggerCharacter": "(",
    "isRetrigger": null
  },
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 9
  }
}
<- response: null
<- request: window/logMessage {
  "type": 1,
  "message": "2023/10/28 18:48:26 no signature help: cannot find an enclosing function\n\tposition=4:9\n"
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 40,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": ")"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 41,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 10
        },
        "end": {
          "line": 4,
          "character": 10
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 42,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 11
        },
        "end": {
          "line": 4,
          "character": 11
        }
      },
      "rangeLength": 0,
      "text": "{"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 43,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 12
        },
        "end": {
          "line": 4,
          "character": 12
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 44,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 0
        },
        "end": {
          "line": 5,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "}"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 44,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 4,
          "character": 0
        },
        "end": {
          "line": 4,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected declaration, found fun"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 3
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 18,
    "character": 2
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 18,
    "character": 2
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 18,
    "character": 2
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 17,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 13,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 14,
    "character": 2
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 12,
    "character": 2
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 17,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 3
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 3,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 45,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 3
        },
        "end": {
          "line": 4,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "c"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 45,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 4
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 13
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 46,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 13
        },
        "end": {
          "line": 4,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 47,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 0
        },
        "end": {
          "line": 5,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 48,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 0
        },
        "end": {
          "line": 5,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 1
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 49,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "p"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 49,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: p"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 50,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 50,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 0
  }
}
<- response: []
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go",
    "languageId": "go",
    "version": 51,
    "text": "\n\npackage hello\n\nfunc main() {\n\t\n}"
  }
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 51,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 0
        },
        "end": {
          "line": 6,
          "character": 0
        }
      },
      "rangeLength": 2,
      "text": ""
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 0
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 4
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 52,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 13
        },
        "end": {
          "line": 4,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 53,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 0
        },
        "end": {
          "line": 5,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 54,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 0
        },
        "end": {
          "line": 5,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 1
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 54,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 55,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "f"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 55,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: f"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 56,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 2
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 56,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fm"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 3
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 57,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 3
        },
        "end": {
          "line": 5,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 57,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 58,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 4
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "."
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 58,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 6
        },
        "end": {
          "line": 5,
          "character": 6
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found '}'"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 5
  }
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Append",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Append",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Append"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Appendf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00001",
      "filterText": "Appendf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Appendf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Appendln",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00002",
      "filterText": "Appendln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Appendln"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Errorf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00003",
      "filterText": "Errorf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Errorf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "FormatString",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00004",
      "filterText": "FormatString",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "FormatString"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Formatter",
      "kind": 7,
      "detail": "type (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00005",
      "filterText": "Formatter",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Formatter"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Fprint",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00006",
      "filterText": "Fprint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Fprint"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Fprintf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00007",
      "filterText": "Fprintf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Fprintf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Fprintln",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00008",
      "filterText": "Fprintln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Fprintln"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Fscan",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00009",
      "filterText": "Fscan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Fscan"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Fscanf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00010",
      "filterText": "Fscanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Fscanf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Fscanln",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00011",
      "filterText": "Fscanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Fscanln"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "GoStringer",
      "kind": 7,
      "detail": "type (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00012",
      "filterText": "GoStringer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "GoStringer"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Print",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00013",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Print"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00014",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Printf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00015",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Println"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Scan",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00016",
      "filterText": "Scan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Scan"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "ScanState",
      "kind": 7,
      "detail": "type (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00017",
      "filterText": "ScanState",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "ScanState"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Scanf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00018",
      "filterText": "Scanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Scanf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Scanln",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00019",
      "filterText": "Scanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Scanln"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Scanner",
      "kind": 7,
      "detail": "type (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00020",
      "filterText": "Scanner",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Scanner"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Sprint",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00021",
      "filterText": "Sprint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Sprint"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Sprintf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00022",
      "filterText": "Sprintf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Sprintf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Sprintln",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00023",
      "filterText": "Sprintln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Sprintln"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Sscan",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00024",
      "filterText": "Sscan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Sscan"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Sscanf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00025",
      "filterText": "Sscanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Sscanf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Sscanln",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00026",
      "filterText": "Sscanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Sscanln"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "State",
      "kind": 7,
      "detail": "type (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00027",
      "filterText": "State",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "State"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Stringer",
      "kind": 7,
      "detail": "type (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00028",
      "filterText": "Stringer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 5
          }
        },
        "newText": "Stringer"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 5
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 5
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 59,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 5
        },
        "end": {
          "line": 5,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "P"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 6
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 59,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Print",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 6
          }
        },
        "newText": "Print"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00001",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 6
          }
        },
        "newText": "Printf"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func (from \"fmt\")",
      "documentation": {
        "kind": "markdown",
        "value": ""
      },
      "sortText": "00002",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 5,
            "character": 5
          },
          "end": {
            "line": 5,
            "character": 6
          }
        },
        "newText": "Println"
      },
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": ""
        },
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "\nimport \"fmt\"\n"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 6
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 5
      },
      "end": {
        "line": 5,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 60,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 5
        },
        "end": {
          "line": 5,
          "character": 6
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 61,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 5
        },
        "end": {
          "line": 5,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "Println"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 60,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 6
        },
        "end": {
          "line": 5,
          "character": 6
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found '}'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 61,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 12
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 5
      },
      "end": {
        "line": 5,
        "character": 12
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 62,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 12
        },
        "end": {
          "line": 5,
          "character": 12
        }
      },
      "rangeLength": 0,
      "text": "("
    }
  ]
}
-> request: textDocument/signatureHelp {
  "context": {
    "triggerKind": 2,
    "triggerCharacter": "(",
    "isRetrigger": null
  },
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 13
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 62,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 6,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
<- response: null
<- request: window/logMessage {
  "type": 1,
  "message": "2023/10/28 18:49:02 no signature help: cannot get type for Fun *ast.SelectorExpr (&{fmt Println})\n\tposition=5:13\n"
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 13
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 63,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 13
        },
        "end": {
          "line": 5,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "\""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 63,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 13
        },
        "end": {
          "line": 5,
          "character": 13
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "string literal not terminated"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 14
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 64,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 14
        },
        "end": {
          "line": 5,
          "character": 14
        }
      },
      "rangeLength": 0,
      "text": "h"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 65,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 15
        },
        "end": {
          "line": 5,
          "character": 15
        }
      },
      "rangeLength": 0,
      "text": "e"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 66,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 16
        },
        "end": {
          "line": 5,
          "character": 16
        }
      },
      "rangeLength": 0,
      "text": "l"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 67,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 17
        },
        "end": {
          "line": 5,
          "character": 17
        }
      },
      "rangeLength": 0,
      "text": "l"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 68,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 18
        },
        "end": {
          "line": 5,
          "character": 18
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 19
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 69,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 18
        },
        "end": {
          "line": 5,
          "character": 19
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 70,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 18
        },
        "end": {
          "line": 5,
          "character": 18
        }
      },
      "rangeLength": 0,
      "text": "o"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 71,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 19
        },
        "end": {
          "line": 5,
          "character": 19
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 72,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 20
        },
        "end": {
          "line": 5,
          "character": 20
        }
      },
      "rangeLength": 0,
      "text": "w"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 73,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 21
        },
        "end": {
          "line": 5,
          "character": 21
        }
      },
      "rangeLength": 0,
      "text": "o"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 74,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 22
        },
        "end": {
          "line": 5,
          "character": 22
        }
      },
      "rangeLength": 0,
      "text": "r"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 75,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 23
        },
        "end": {
          "line": 5,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "l"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 76,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 24
        },
        "end": {
          "line": 5,
          "character": 24
        }
      },
      "rangeLength": 0,
      "text": "d"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 77,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 25
        },
        "end": {
          "line": 5,
          "character": 25
        }
      },
      "rangeLength": 0,
      "text": "\""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 77,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 26
        },
        "end": {
          "line": 5,
          "character": 26
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "missing ',' before newline in argument list"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 78,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 26
        },
        "end": {
          "line": 5,
          "character": 26
        }
      },
      "rangeLength": 0,
      "text": ")"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 78,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 27
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 79,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 27
        },
        "end": {
          "line": 5,
          "character": 27
        }
      },
      "rangeLength": 0,
      "text": ";"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 28
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 79,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 80,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 28
        },
        "end": {
          "line": 5,
          "character": 28
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 80,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 81,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  }
]
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 81,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
-> request: textDocument/codeAction {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "range": {
    "start": {
      "line": 5,
      "character": 0
    },
    "end": {
      "line": 5,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}
<- response: [
  {
    "title": "Organize Imports",
    "kind": "source.organizeImports",
    "edit": {
      "documentChanges": [
        {
          "textDocument": {
            "version": 81,
            "uri": "file:///home/max/uni/golang/socket/hello.go"
          },
          "edits": [
            {
              "range": {
                "start": {
                  "line": 0,
                  "character": 0
                },
                "end": {
                  "line": 2,
                  "character": 0
                }
              },
              "newText": ""
            },
            {
              "range": {
                "start": {
                  "line": 3,
                  "character": 0
                },
                "end": {
                  "line": 3,
                  "character": 0
                }
              },
              "newText": "\nimport \"fmt\"\n"
            }
          ]
        }
      ]
    }
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 82,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "rangeLength": 2,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 83,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 84,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 1,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 85,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 1,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\nimport \"fmt\"\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 82,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 3,
          "character": 1
        },
        "end": {
          "line": 3,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fmt"
    }
  ]
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:49:15 go/packages.Load #19\n\tsnapshot=91\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./]\n\tpackages=1\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:49:15 go/packages.Load #19: updating metadata for 1 packages\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 85,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 7
      },
      "end": {
        "line": 2,
        "character": 12
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 7
      },
      "end": {
        "line": 2,
        "character": 12
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 5
      },
      "end": {
        "line": 4,
        "character": 9
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 7
      },
      "end": {
        "line": 2,
        "character": 12
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 5
      },
      "end": {
        "line": 4,
        "character": 9
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 5
      },
      "end": {
        "line": 4,
        "character": 9
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 2,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 2,
        "character": 7
      },
      "end": {
        "line": 2,
        "character": 12
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 4,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 4,
        "character": 5
      },
      "end": {
        "line": 4,
        "character": 9
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 2,
        "character": 7
      },
      "end": {
        "line": 2,
        "character": 12
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 86,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 4,
          "character": 13
        },
        "end": {
          "line": 4,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 87,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 0
        },
        "end": {
          "line": 5,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 88,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 0
        },
        "end": {
          "line": 5,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 1
  }
}
<- response: []
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:49:23 background imports cache refresh starting\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:49:23 background refresh finished after 356.812µs\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 88,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 89,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "v"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 89,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: v"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 90,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 2
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 90,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: va"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 91,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 3
        },
        "end": {
          "line": 5,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "r"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 91,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 4
        },
        "end": {
          "line": 6,
          "character": 4
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected type, found '.'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 4
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 92,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 3
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 92,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: va"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 93,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 2
        },
        "end": {
          "line": 5,
          "character": 3
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 93,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: v"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 94,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 94,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 1
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 95,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "s"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 95,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: s"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 96,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 2
        },
        "end": {
          "line": 5,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "u"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 96,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: su"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 3
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 97,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 3
        },
        "end": {
          "line": 5,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 97,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: sum"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 98,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 4
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 99,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 5
        },
        "end": {
          "line": 5,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": ":"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 99,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedLabel",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedLabel"
      },
      "source": "compiler",
      "message": "label sum declared and not used"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 6
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 100,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 6
        },
        "end": {
          "line": 5,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": "="
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 100,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 1
        },
        "end": {
          "line": 6,
          "character": 27
        }
      },
      "severity": 1,
      "code": "WrongAssignCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongAssignCount"
      },
      "source": "compiler",
      "message": "assignment mismatch: 1 variable but fmt.Println returns 2 values"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 101,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 7
        },
        "end": {
          "line": 5,
          "character": 7
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 8
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 102,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 8
        },
        "end": {
          "line": 5,
          "character": 8
        }
      },
      "rangeLength": 0,
      "text": "0"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 102,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 5,
    "character": 9
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 103,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 9
        },
        "end": {
          "line": 5,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 103,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 104,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "rangeLength": 29,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 104,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 105,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 106,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 5,
          "character": 9
        },
        "end": {
          "line": 5,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 107,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 6,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 108,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 6,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 1
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 109,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 1
        },
        "end": {
          "line": 6,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "f"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 109,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 1
        },
        "end": {
          "line": 6,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: f"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 110,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 2
        },
        "end": {
          "line": 6,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "o"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 110,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 1
        },
        "end": {
          "line": 6,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fo"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 111,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 3
        },
        "end": {
          "line": 6,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "r"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 111,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 112,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 4
        },
        "end": {
          "line": 6,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 5
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 1
      },
      "end": {
        "line": 6,
        "character": 4
      }
    },
    "kind": 1
  }
]
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 112,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 113,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 5
        },
        "end": {
          "line": 6,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 113,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 7
        },
        "end": {
          "line": 6,
          "character": 7
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 6
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 5
      },
      "end": {
        "line": 6,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 114,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 6
        },
        "end": {
          "line": 6,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 114,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 8
        },
        "end": {
          "line": 6,
          "character": 8
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 7
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 115,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 7
        },
        "end": {
          "line": 6,
          "character": 7
        }
      },
      "rangeLength": 0,
      "text": ":"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 115,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 5
        },
        "end": {
          "line": 6,
          "character": 5
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected boolean or range expression, found simple statement (missing parentheses around composite literal?)"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 8
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 8
      },
      "end": {
        "line": 7,
        "character": 0
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 116,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 8
        },
        "end": {
          "line": 6,
          "character": 8
        }
      },
      "rangeLength": 0,
      "text": "="
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 116,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 5
        },
        "end": {
          "line": 6,
          "character": 5
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected boolean or range expression, found assignment (missing parentheses around composite literal?)"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 117,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 9
        },
        "end": {
          "line": 6,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 118,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 10
        },
        "end": {
          "line": 6,
          "character": 10
        }
      },
      "rangeLength": 0,
      "text": "0"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 118,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 11
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 1
      },
      "end": {
        "line": 6,
        "character": 4
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 119,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 11
        },
        "end": {
          "line": 6,
          "character": 11
        }
      },
      "rangeLength": 0,
      "text": ";"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 120,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 12
        },
        "end": {
          "line": 6,
          "character": 12
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 13
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 1
      },
      "end": {
        "line": 6,
        "character": 4
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 121,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 13
        },
        "end": {
          "line": 6,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 121,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 15
        },
        "end": {
          "line": 6,
          "character": 15
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 122,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 14
        },
        "end": {
          "line": 6,
          "character": 14
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 122,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 16
        },
        "end": {
          "line": 6,
          "character": 16
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 123,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 15
        },
        "end": {
          "line": 6,
          "character": 15
        }
      },
      "rangeLength": 0,
      "text": "<"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 123,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 124,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 16
        },
        "end": {
          "line": 6,
          "character": 16
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 17
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 125,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 17
        },
        "end": {
          "line": 6,
          "character": 17
        }
      },
      "rangeLength": 0,
      "text": "1"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 126,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 18
        },
        "end": {
          "line": 6,
          "character": 18
        }
      },
      "rangeLength": 0,
      "text": "0"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 19
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 1
      },
      "end": {
        "line": 6,
        "character": 4
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 127,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 19
        },
        "end": {
          "line": 6,
          "character": 19
        }
      },
      "rangeLength": 0,
      "text": ";"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 20
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 1
      },
      "end": {
        "line": 6,
        "character": 4
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 128,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 20
        },
        "end": {
          "line": 6,
          "character": 20
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 21
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 1
      },
      "end": {
        "line": 6,
        "character": 4
      }
    },
    "kind": 1
  }
]
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 128,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 129,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 21
        },
        "end": {
          "line": 6,
          "character": 21
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 129,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 22
        },
        "end": {
          "line": 6,
          "character": 22
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected '{', found newline"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 22
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 5
      },
      "end": {
        "line": 6,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 13
      },
      "end": {
        "line": 6,
        "character": 14
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 21
      },
      "end": {
        "line": 6,
        "character": 22
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 130,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 22
        },
        "end": {
          "line": 6,
          "character": 22
        }
      },
      "rangeLength": 0,
      "text": "+"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 130,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 131,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 23
        },
        "end": {
          "line": 6,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "+"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 131,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 24
        },
        "end": {
          "line": 6,
          "character": 24
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected '{', found newline"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 24
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 132,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 24
        },
        "end": {
          "line": 6,
          "character": 24
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 132,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 6,
          "character": 25
        },
        "end": {
          "line": 6,
          "character": 25
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected '{', found newline"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 133,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 25
        },
        "end": {
          "line": 6,
          "character": 25
        }
      },
      "rangeLength": 0,
      "text": "{"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 133,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 1
        },
        "end": {
          "line": 7,
          "character": 1
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 134,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 26
        },
        "end": {
          "line": 6,
          "character": 26
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 134,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 8,
          "character": 1
        },
        "end": {
          "line": 8,
          "character": 1
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected ';', found 'EOF'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 135,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "}"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 136,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 137,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 135,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 2
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 137,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 138,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 26
        },
        "end": {
          "line": 6,
          "character": 26
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 139,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 140,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 7,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t\t"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 2
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 140,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 141,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 2
        },
        "end": {
          "line": 7,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "s"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 141,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 2
        },
        "end": {
          "line": 7,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: s"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 142,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 3
        },
        "end": {
          "line": 7,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "u"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 142,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UnusedVar",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedVar"
      },
      "source": "compiler",
      "message": "sum declared and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 2
        },
        "end": {
          "line": 7,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: su"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 143,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 4
        },
        "end": {
          "line": 7,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 143,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 7,
          "character": 2
        },
        "end": {
          "line": 7,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UnusedExpr",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedExpr"
      },
      "source": "compiler",
      "message": "sum (variable of type int) is not used"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 144,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 6
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 145,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 6
        },
        "end": {
          "line": 7,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": "+"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 145,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 8,
          "character": 1
        },
        "end": {
          "line": 8,
          "character": 1
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 7
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 146,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 7
        },
        "end": {
          "line": 7,
          "character": 7
        }
      },
      "rangeLength": 0,
      "text": "="
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 147,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 8
        },
        "end": {
          "line": 7,
          "character": 8
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 9
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 147,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 8,
          "character": 1
        },
        "end": {
          "line": 8,
          "character": 1
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 148,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 9
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 148,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 149,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 10
        },
        "end": {
          "line": 7,
          "character": 10
        }
      },
      "rangeLength": 0,
      "text": ";"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 11
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 10
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 5
      },
      "end": {
        "line": 6,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 13
      },
      "end": {
        "line": 6,
        "character": 14
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 21
      },
      "end": {
        "line": 6,
        "character": 22
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 7,
        "character": 9
      },
      "end": {
        "line": 7,
        "character": 10
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 150,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 10
        },
        "end": {
          "line": 7,
          "character": 11
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 5
      },
      "end": {
        "line": 6,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 13
      },
      "end": {
        "line": 6,
        "character": 14
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 21
      },
      "end": {
        "line": 6,
        "character": 22
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 7,
        "character": 9
      },
      "end": {
        "line": 7,
        "character": 10
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 151,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 2
        },
        "end": {
          "line": 8,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 152,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 153,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\t"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 1
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 153,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 154,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "p"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 154,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: p"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 1
      },
      "end": {
        "line": 9,
        "character": 2
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 155,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 2
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 155,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 156,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "P"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 156,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: P"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 157,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 2
        },
        "end": {
          "line": 9,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "r"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 157,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Pr"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 158,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 3
        },
        "end": {
          "line": 9,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 158,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Pri"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 159,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 4
        },
        "end": {
          "line": 9,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 159,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Prin"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 160,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 160,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Print"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 6
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 1
      },
      "end": {
        "line": 9,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 161,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 6
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": "l"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 161,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 7
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Printl"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 162,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 7
        },
        "end": {
          "line": 9,
          "character": 7
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 162,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 8
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Println"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 8
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 1
      },
      "end": {
        "line": 9,
        "character": 8
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 163,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 7
        },
        "end": {
          "line": 9,
          "character": 8
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 163,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 7
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Printl"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 164,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 6
        },
        "end": {
          "line": 9,
          "character": 7
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 164,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Print"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 165,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 165,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 5
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Prin"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 166,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 4
        },
        "end": {
          "line": 9,
          "character": 5
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 166,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 4
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Pri"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 167,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 3
        },
        "end": {
          "line": 9,
          "character": 4
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 167,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: Pr"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 168,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 2
        },
        "end": {
          "line": 9,
          "character": 3
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 168,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: P"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 169,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 2
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 169,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 170,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "f"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 170,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 2
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: f"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 171,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 2
        },
        "end": {
          "line": 9,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 171,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 3
        }
      },
      "severity": 1,
      "code": "UndeclaredName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredName"
      },
      "source": "compiler",
      "message": "undefined: fm"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 3
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 1
      },
      "end": {
        "line": 9,
        "character": 3
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 172,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 3
        },
        "end": {
          "line": 9,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "t"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 172,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedImport",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedImport"
      },
      "source": "compiler",
      "message": "\"fmt\" imported and not used",
      "tags": [
        1
      ]
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 4
        }
      },
      "severity": 1,
      "code": "InvalidPkgUse",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#InvalidPkgUse"
      },
      "source": "compiler",
      "message": "use of package fmt not in selector"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 173,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 4
        },
        "end": {
          "line": 9,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "."
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 5
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 173,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 6
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found '}'"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Append",
      "kind": 3,
      "detail": "func(b []byte, a ...any) []byte",
      "documentation": {
        "kind": "markdown",
        "value": "Append formats using the default formats for its operands, appends the result to the byte slice, and returns the updated slice.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Append",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Append"
      }
    },
    {
      "label": "Appendf",
      "kind": 3,
      "detail": "func(b []byte, format string, a ...any) []byte",
      "documentation": {
        "kind": "markdown",
        "value": "Appendf formats according to a format specifier, appends the result to the byte slice, and returns the updated slice.\n"
      },
      "sortText": "00001",
      "filterText": "Appendf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Appendf"
      }
    },
    {
      "label": "Appendln",
      "kind": 3,
      "detail": "func(b []byte, a ...any) []byte",
      "documentation": {
        "kind": "markdown",
        "value": "Appendln formats using the default formats for its operands, appends the result to the byte slice, and returns the updated slice. Spaces are always added between operands and a newline is appended.\n"
      },
      "sortText": "00002",
      "filterText": "Appendln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Appendln"
      }
    },
    {
      "label": "Errorf",
      "kind": 3,
      "detail": "func(format string, a ...any) error",
      "documentation": {
        "kind": "markdown",
        "value": "Errorf formats according to a format specifier and returns the string as a value that satisfies error.\n\nIf the format specifier includes a %w verb with an error operand, the returned error will implement an Unwrap method returning the operand. If there is more than one %w verb, the returned error will implement an Unwrap method returning a \\[]error containing all the %w operands in the order they appear in the arguments. It is invalid to supply the %w verb with an operand that does not implement the error interface. The %w verb is otherwise a synonym for %v.\n"
      },
      "sortText": "00003",
      "filterText": "Errorf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Errorf"
      }
    },
    {
      "label": "FormatString",
      "kind": 3,
      "detail": "func(state fmt.State, verb rune) string",
      "documentation": {
        "kind": "markdown",
        "value": "FormatString returns a string representing the fully qualified formatting directive captured by the State, followed by the argument verb. (State does not itself contain the verb.) The result has a leading percent sign followed by any flags, the width, and the precision. Missing flags, width, and precision are omitted. This function allows a Formatter to reconstruct the original directive triggering the call to Format.\n"
      },
      "sortText": "00004",
      "filterText": "FormatString",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "FormatString"
      }
    },
    {
      "label": "Formatter",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Formatter is implemented by any value that has a Format method. The implementation controls how State and rune are interpreted, and may call Sprint() or Fprint(f) etc. to generate its output.\n"
      },
      "sortText": "00005",
      "filterText": "Formatter",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Formatter"
      }
    },
    {
      "label": "Fprint",
      "kind": 3,
      "detail": "func(w io.Writer, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprint formats using the default formats for its operands and writes to w. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00006",
      "filterText": "Fprint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fprint"
      }
    },
    {
      "label": "Fprintf",
      "kind": 3,
      "detail": "func(w io.Writer, format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprintf formats according to a format specifier and writes to w. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00007",
      "filterText": "Fprintf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fprintf"
      }
    },
    {
      "label": "Fprintln",
      "kind": 3,
      "detail": "func(w io.Writer, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprintln formats using the default formats for its operands and writes to w. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00008",
      "filterText": "Fprintln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fprintln"
      }
    },
    {
      "label": "Fscan",
      "kind": 3,
      "detail": "func(r io.Reader, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fscan scans text read from r, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.\n"
      },
      "sortText": "00009",
      "filterText": "Fscan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fscan"
      }
    },
    {
      "label": "Fscanf",
      "kind": 3,
      "detail": "func(r io.Reader, format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fscanf scans text read from r, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully parsed. Newlines in the input must match newlines in the format.\n"
      },
      "sortText": "00010",
      "filterText": "Fscanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fscanf"
      }
    },
    {
      "label": "Fscanln",
      "kind": 3,
      "detail": "func(r io.Reader, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fscanln is similar to Fscan, but stops scanning at a newline and after the final item there must be a newline or EOF.\n"
      },
      "sortText": "00011",
      "filterText": "Fscanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fscanln"
      }
    },
    {
      "label": "GoStringer",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "GoStringer is implemented by any value that has a GoString method, which defines the Go syntax for that value. The GoString method is used to print values passed as an operand to a %#v format.\n"
      },
      "sortText": "00012",
      "filterText": "GoStringer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "GoStringer"
      }
    },
    {
      "label": "Print",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Print formats using the default formats for its operands and writes to standard output. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00013",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Print"
      }
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Printf formats according to a format specifier and writes to standard output. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00014",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Printf"
      }
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00015",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Println"
      }
    },
    {
      "label": "Scan",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Scan scans text read from standard input, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.\n"
      },
      "sortText": "00016",
      "filterText": "Scan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Scan"
      }
    },
    {
      "label": "ScanState",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "ScanState represents the scanner state passed to custom scanners. Scanners may do rune-at-a-time scanning or ask the ScanState to discover the next space-delimited token.\n"
      },
      "sortText": "00017",
      "filterText": "ScanState",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "ScanState"
      }
    },
    {
      "label": "Scanf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Scanf scans text read from standard input, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why. Newlines in the input must match newlines in the format. The one exception: the verb %c always scans the next rune in the input, even if it is a space (or tab etc.) or newline.\n"
      },
      "sortText": "00018",
      "filterText": "Scanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Scanf"
      }
    },
    {
      "label": "Scanln",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Scanln is similar to Scan, but stops scanning at a newline and after the final item there must be a newline or EOF.\n"
      },
      "sortText": "00019",
      "filterText": "Scanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Scanln"
      }
    },
    {
      "label": "Scanner",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Scanner is implemented by any value that has a Scan method, which scans the input for the representation of a value and stores the result in the receiver, which must be a pointer to be useful. The Scan method is called for any argument to Scan, Scanf, or Scanln that implements it.\n"
      },
      "sortText": "00020",
      "filterText": "Scanner",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Scanner"
      }
    },
    {
      "label": "Sprint",
      "kind": 3,
      "detail": "func(a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprint formats using the default formats for its operands and returns the resulting string. Spaces are added between operands when neither is a string.\n"
      },
      "sortText": "00021",
      "filterText": "Sprint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sprint"
      }
    },
    {
      "label": "Sprintf",
      "kind": 3,
      "detail": "func(format string, a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprintf formats according to a format specifier and returns the resulting string.\n"
      },
      "sortText": "00022",
      "filterText": "Sprintf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sprintf"
      }
    },
    {
      "label": "Sprintln",
      "kind": 3,
      "detail": "func(a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprintln formats using the default formats for its operands and returns the resulting string. Spaces are always added between operands and a newline is appended.\n"
      },
      "sortText": "00023",
      "filterText": "Sprintln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sprintln"
      }
    },
    {
      "label": "Sscan",
      "kind": 3,
      "detail": "func(str string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Sscan scans the argument string, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.\n"
      },
      "sortText": "00024",
      "filterText": "Sscan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sscan"
      }
    },
    {
      "label": "Sscanf",
      "kind": 3,
      "detail": "func(str string, format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Sscanf scans the argument string, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully parsed. Newlines in the input must match newlines in the format.\n"
      },
      "sortText": "00025",
      "filterText": "Sscanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sscanf"
      }
    },
    {
      "label": "Sscanln",
      "kind": 3,
      "detail": "func(str string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Sscanln is similar to Sscan, but stops scanning at a newline and after the final item there must be a newline or EOF.\n"
      },
      "sortText": "00026",
      "filterText": "Sscanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sscanln"
      }
    },
    {
      "label": "State",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "State represents the printer state passed to custom formatters. It provides access to the io.Writer interface plus information about the flags and options for the operand's format specifier.\n"
      },
      "sortText": "00027",
      "filterText": "State",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "State"
      }
    },
    {
      "label": "Stringer",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Stringer is implemented by any value that has a String method, which defines the “native” format for that value. The String method is used to print values passed as an operand to any format that accepts a string or to an unformatted printer such as Print.\n"
      },
      "sortText": "00028",
      "filterText": "Stringer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Stringer"
      }
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 5
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 5
      },
      "end": {
        "line": 9,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 174,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "p"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 6
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 174,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: fmt.p"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Print",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Print formats using the default formats for its operands and writes to standard output. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 6
          }
        },
        "newText": "Print"
      }
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Printf formats according to a format specifier and writes to standard output. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00001",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 6
          }
        },
        "newText": "Printf"
      }
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00002",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 6
          }
        },
        "newText": "Println"
      }
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 6
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 5
      },
      "end": {
        "line": 9,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 175,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 5
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 175,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 6
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found '}'"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Append",
      "kind": 3,
      "detail": "func(b []byte, a ...any) []byte",
      "documentation": {
        "kind": "markdown",
        "value": "Append formats using the default formats for its operands, appends the result to the byte slice, and returns the updated slice.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Append",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Append"
      }
    },
    {
      "label": "Appendf",
      "kind": 3,
      "detail": "func(b []byte, format string, a ...any) []byte",
      "documentation": {
        "kind": "markdown",
        "value": "Appendf formats according to a format specifier, appends the result to the byte slice, and returns the updated slice.\n"
      },
      "sortText": "00001",
      "filterText": "Appendf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Appendf"
      }
    },
    {
      "label": "Appendln",
      "kind": 3,
      "detail": "func(b []byte, a ...any) []byte",
      "documentation": {
        "kind": "markdown",
        "value": "Appendln formats using the default formats for its operands, appends the result to the byte slice, and returns the updated slice. Spaces are always added between operands and a newline is appended.\n"
      },
      "sortText": "00002",
      "filterText": "Appendln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Appendln"
      }
    },
    {
      "label": "Errorf",
      "kind": 3,
      "detail": "func(format string, a ...any) error",
      "documentation": {
        "kind": "markdown",
        "value": "Errorf formats according to a format specifier and returns the string as a value that satisfies error.\n\nIf the format specifier includes a %w verb with an error operand, the returned error will implement an Unwrap method returning the operand. If there is more than one %w verb, the returned error will implement an Unwrap method returning a \\[]error containing all the %w operands in the order they appear in the arguments. It is invalid to supply the %w verb with an operand that does not implement the error interface. The %w verb is otherwise a synonym for %v.\n"
      },
      "sortText": "00003",
      "filterText": "Errorf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Errorf"
      }
    },
    {
      "label": "FormatString",
      "kind": 3,
      "detail": "func(state fmt.State, verb rune) string",
      "documentation": {
        "kind": "markdown",
        "value": "FormatString returns a string representing the fully qualified formatting directive captured by the State, followed by the argument verb. (State does not itself contain the verb.) The result has a leading percent sign followed by any flags, the width, and the precision. Missing flags, width, and precision are omitted. This function allows a Formatter to reconstruct the original directive triggering the call to Format.\n"
      },
      "sortText": "00004",
      "filterText": "FormatString",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "FormatString"
      }
    },
    {
      "label": "Formatter",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Formatter is implemented by any value that has a Format method. The implementation controls how State and rune are interpreted, and may call Sprint() or Fprint(f) etc. to generate its output.\n"
      },
      "sortText": "00005",
      "filterText": "Formatter",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Formatter"
      }
    },
    {
      "label": "Fprint",
      "kind": 3,
      "detail": "func(w io.Writer, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprint formats using the default formats for its operands and writes to w. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00006",
      "filterText": "Fprint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fprint"
      }
    },
    {
      "label": "Fprintf",
      "kind": 3,
      "detail": "func(w io.Writer, format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprintf formats according to a format specifier and writes to w. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00007",
      "filterText": "Fprintf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fprintf"
      }
    },
    {
      "label": "Fprintln",
      "kind": 3,
      "detail": "func(w io.Writer, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprintln formats using the default formats for its operands and writes to w. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00008",
      "filterText": "Fprintln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fprintln"
      }
    },
    {
      "label": "Fscan",
      "kind": 3,
      "detail": "func(r io.Reader, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fscan scans text read from r, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.\n"
      },
      "sortText": "00009",
      "filterText": "Fscan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fscan"
      }
    },
    {
      "label": "Fscanf",
      "kind": 3,
      "detail": "func(r io.Reader, format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fscanf scans text read from r, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully parsed. Newlines in the input must match newlines in the format.\n"
      },
      "sortText": "00010",
      "filterText": "Fscanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fscanf"
      }
    },
    {
      "label": "Fscanln",
      "kind": 3,
      "detail": "func(r io.Reader, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fscanln is similar to Fscan, but stops scanning at a newline and after the final item there must be a newline or EOF.\n"
      },
      "sortText": "00011",
      "filterText": "Fscanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Fscanln"
      }
    },
    {
      "label": "GoStringer",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "GoStringer is implemented by any value that has a GoString method, which defines the Go syntax for that value. The GoString method is used to print values passed as an operand to a %#v format.\n"
      },
      "sortText": "00012",
      "filterText": "GoStringer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "GoStringer"
      }
    },
    {
      "label": "Print",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Print formats using the default formats for its operands and writes to standard output. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00013",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Print"
      }
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Printf formats according to a format specifier and writes to standard output. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00014",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Printf"
      }
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00015",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Println"
      }
    },
    {
      "label": "Scan",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Scan scans text read from standard input, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.\n"
      },
      "sortText": "00016",
      "filterText": "Scan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Scan"
      }
    },
    {
      "label": "ScanState",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "ScanState represents the scanner state passed to custom scanners. Scanners may do rune-at-a-time scanning or ask the ScanState to discover the next space-delimited token.\n"
      },
      "sortText": "00017",
      "filterText": "ScanState",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "ScanState"
      }
    },
    {
      "label": "Scanf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Scanf scans text read from standard input, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why. Newlines in the input must match newlines in the format. The one exception: the verb %c always scans the next rune in the input, even if it is a space (or tab etc.) or newline.\n"
      },
      "sortText": "00018",
      "filterText": "Scanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Scanf"
      }
    },
    {
      "label": "Scanln",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Scanln is similar to Scan, but stops scanning at a newline and after the final item there must be a newline or EOF.\n"
      },
      "sortText": "00019",
      "filterText": "Scanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Scanln"
      }
    },
    {
      "label": "Scanner",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Scanner is implemented by any value that has a Scan method, which scans the input for the representation of a value and stores the result in the receiver, which must be a pointer to be useful. The Scan method is called for any argument to Scan, Scanf, or Scanln that implements it.\n"
      },
      "sortText": "00020",
      "filterText": "Scanner",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Scanner"
      }
    },
    {
      "label": "Sprint",
      "kind": 3,
      "detail": "func(a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprint formats using the default formats for its operands and returns the resulting string. Spaces are added between operands when neither is a string.\n"
      },
      "sortText": "00021",
      "filterText": "Sprint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sprint"
      }
    },
    {
      "label": "Sprintf",
      "kind": 3,
      "detail": "func(format string, a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprintf formats according to a format specifier and returns the resulting string.\n"
      },
      "sortText": "00022",
      "filterText": "Sprintf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sprintf"
      }
    },
    {
      "label": "Sprintln",
      "kind": 3,
      "detail": "func(a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprintln formats using the default formats for its operands and returns the resulting string. Spaces are always added between operands and a newline is appended.\n"
      },
      "sortText": "00023",
      "filterText": "Sprintln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sprintln"
      }
    },
    {
      "label": "Sscan",
      "kind": 3,
      "detail": "func(str string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Sscan scans the argument string, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.\n"
      },
      "sortText": "00024",
      "filterText": "Sscan",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sscan"
      }
    },
    {
      "label": "Sscanf",
      "kind": 3,
      "detail": "func(str string, format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Sscanf scans the argument string, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully parsed. Newlines in the input must match newlines in the format.\n"
      },
      "sortText": "00025",
      "filterText": "Sscanf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sscanf"
      }
    },
    {
      "label": "Sscanln",
      "kind": 3,
      "detail": "func(str string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Sscanln is similar to Sscan, but stops scanning at a newline and after the final item there must be a newline or EOF.\n"
      },
      "sortText": "00026",
      "filterText": "Sscanln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Sscanln"
      }
    },
    {
      "label": "State",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "State represents the printer state passed to custom formatters. It provides access to the io.Writer interface plus information about the flags and options for the operand's format specifier.\n"
      },
      "sortText": "00027",
      "filterText": "State",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "State"
      }
    },
    {
      "label": "Stringer",
      "kind": 8,
      "detail": "interface{...}",
      "documentation": {
        "kind": "markdown",
        "value": "Stringer is implemented by any value that has a String method, which defines the “native” format for that value. The String method is used to print values passed as an operand to any format that accepts a string or to an unformatted printer such as Print.\n"
      },
      "sortText": "00028",
      "filterText": "Stringer",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 5
          }
        },
        "newText": "Stringer"
      }
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 176,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "P"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 6
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 176,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: fmt.P"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Print",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Print formats using the default formats for its operands and writes to standard output. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 6
          }
        },
        "newText": "Print"
      }
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Printf formats according to a format specifier and writes to standard output. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00001",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 6
          }
        },
        "newText": "Printf"
      }
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00002",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 6
          }
        },
        "newText": "Println"
      }
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 6
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 5
      },
      "end": {
        "line": 9,
        "character": 6
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 177,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 6
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": "r"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 7
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 177,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 7
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: fmt.Pr"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Print",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Print formats using the default formats for its operands and writes to standard output. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 7
          }
        },
        "newText": "Print"
      }
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Printf formats according to a format specifier and writes to standard output. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00001",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 7
          }
        },
        "newText": "Printf"
      }
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00002",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 7
          }
        },
        "newText": "Println"
      }
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 178,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 7
        },
        "end": {
          "line": 9,
          "character": 7
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 8
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 178,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 8
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: fmt.Pri"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Print",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Print formats using the default formats for its operands and writes to standard output. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 8
          }
        },
        "newText": "Print"
      }
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Printf formats according to a format specifier and writes to standard output. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00001",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 8
          }
        },
        "newText": "Printf"
      }
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00002",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 8
          }
        },
        "newText": "Println"
      }
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 179,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 8
        },
        "end": {
          "line": 9,
          "character": 8
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}
-> request: textDocument/completion {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 9
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 179,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 9
        }
      },
      "severity": 1,
      "code": "UndeclaredImportedName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UndeclaredImportedName"
      },
      "source": "compiler",
      "message": "undefined: fmt.Prin"
    }
  ]
}
<- response: {
  "isIncomplete": true,
  "items": [
    {
      "label": "Print",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Print formats using the default formats for its operands and writes to standard output. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "preselect": true,
      "sortText": "00000",
      "filterText": "Print",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Print"
      }
    },
    {
      "label": "Printf",
      "kind": 3,
      "detail": "func(format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Printf formats according to a format specifier and writes to standard output. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00001",
      "filterText": "Printf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Printf"
      }
    },
    {
      "label": "Println",
      "kind": 3,
      "detail": "func(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00002",
      "filterText": "Println",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Println"
      }
    },
    {
      "label": "Fprint",
      "kind": 3,
      "detail": "func(w io.Writer, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprint formats using the default formats for its operands and writes to w. Spaces are added between operands when neither is a string. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00003",
      "filterText": "Fprint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Fprint"
      }
    },
    {
      "label": "Fprintf",
      "kind": 3,
      "detail": "func(w io.Writer, format string, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprintf formats according to a format specifier and writes to w. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00004",
      "filterText": "Fprintf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Fprintf"
      }
    },
    {
      "label": "Fprintln",
      "kind": 3,
      "detail": "func(w io.Writer, a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Fprintln formats using the default formats for its operands and writes to w. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered.\n"
      },
      "sortText": "00005",
      "filterText": "Fprintln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Fprintln"
      }
    },
    {
      "label": "Sprint",
      "kind": 3,
      "detail": "func(a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprint formats using the default formats for its operands and returns the resulting string. Spaces are added between operands when neither is a string.\n"
      },
      "sortText": "00006",
      "filterText": "Sprint",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Sprint"
      }
    },
    {
      "label": "Sprintf",
      "kind": 3,
      "detail": "func(format string, a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprintf formats according to a format specifier and returns the resulting string.\n"
      },
      "sortText": "00007",
      "filterText": "Sprintf",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Sprintf"
      }
    },
    {
      "label": "Sprintln",
      "kind": 3,
      "detail": "func(a ...any) string",
      "documentation": {
        "kind": "markdown",
        "value": "Sprintln formats using the default formats for its operands and returns the resulting string. Spaces are always added between operands and a newline is appended.\n"
      },
      "sortText": "00008",
      "filterText": "Sprintln",
      "insertTextFormat": 1,
      "textEdit": {
        "range": {
          "start": {
            "line": 9,
            "character": 5
          },
          "end": {
            "line": 9,
            "character": 9
          }
        },
        "newText": "Sprintln"
      }
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 5
      },
      "end": {
        "line": 9,
        "character": 9
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 180,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 9
        }
      },
      "rangeLength": 4,
      "text": ""
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 181,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "Println"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 180,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 6
        },
        "end": {
          "line": 9,
          "character": 6
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected selector or type assertion, found '}'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 181,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 12
        }
      },
      "severity": 1,
      "code": "UnusedExpr",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#UnusedExpr"
      },
      "source": "compiler",
      "message": "fmt.Println (value of type func(a ...any) (n int, err error)) is not used"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 12
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 5
      },
      "end": {
        "line": 9,
        "character": 12
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 182,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 12
        },
        "end": {
          "line": 9,
          "character": 12
        }
      },
      "rangeLength": 0,
      "text": "("
    }
  ]
}
-> request: textDocument/signatureHelp {
  "context": {
    "triggerKind": 2,
    "triggerCharacter": "(",
    "isRetrigger": null
  },
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 13
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 182,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 10,
          "character": 0
        },
        "end": {
          "line": 10,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
<- response: {
  "signatures": [
    {
      "label": "Println(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered."
      },
      "parameters": [
        {
          "label": "a ...any"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 183,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 13
        },
        "end": {
          "line": 9,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "\""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 183,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 13
        },
        "end": {
          "line": 9,
          "character": 13
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "string literal not terminated"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 14
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 184,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 14
        },
        "end": {
          "line": 9,
          "character": 14
        }
      },
      "rangeLength": 0,
      "text": "H"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 15
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 185,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 14
        },
        "end": {
          "line": 9,
          "character": 15
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 14
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 186,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 14
        },
        "end": {
          "line": 9,
          "character": 14
        }
      },
      "rangeLength": 0,
      "text": "s"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 187,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 15
        },
        "end": {
          "line": 9,
          "character": 15
        }
      },
      "rangeLength": 0,
      "text": "u"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 188,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 16
        },
        "end": {
          "line": 9,
          "character": 16
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 17
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 189,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 17
        },
        "end": {
          "line": 9,
          "character": 17
        }
      },
      "rangeLength": 0,
      "text": ":"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 190,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 18
        },
        "end": {
          "line": 9,
          "character": 18
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 19
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 191,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 19
        },
        "end": {
          "line": 9,
          "character": 19
        }
      },
      "rangeLength": 0,
      "text": "\""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 191,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 20
        },
        "end": {
          "line": 9,
          "character": 20
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "missing ',' before newline in argument list"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 20
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 192,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 20
        },
        "end": {
          "line": 9,
          "character": 20
        }
      },
      "rangeLength": 0,
      "text": ","
    }
  ]
}
-> request: textDocument/signatureHelp {
  "context": {
    "triggerKind": 2,
    "triggerCharacter": ",",
    "isRetrigger": null
  },
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 21
  }
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 192,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 10,
          "character": 0
        },
        "end": {
          "line": 10,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected operand, found '}'"
    }
  ]
}
<- response: {
  "signatures": [
    {
      "label": "Println(a ...any) (n int, err error)",
      "documentation": {
        "kind": "markdown",
        "value": "Println formats using the default formats for its operands and writes to standard output. Spaces are always added between operands and a newline is appended. It returns the number of bytes written and any write error encountered."
      },
      "parameters": [
        {
          "label": "a ...any"
        }
      ]
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 193,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 21
        },
        "end": {
          "line": 9,
          "character": 21
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 22
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 194,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 22
        },
        "end": {
          "line": 9,
          "character": 22
        }
      },
      "rangeLength": 0,
      "text": "s"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 194,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 23
        },
        "end": {
          "line": 9,
          "character": 23
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "missing ',' before newline in argument list"
    }
  ]
}
notify: textDocument/didChange {
  "textDocument": {
    "version": 195,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 23
        },
        "end": {
          "line": 9,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "u"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 195,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 24
        },
        "end": {
          "line": 9,
          "character": 24
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "missing ',' before newline in argument list"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 24
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 9,
        "character": 22
      },
      "end": {
        "line": 9,
        "character": 24
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 196,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 24
        },
        "end": {
          "line": 9,
          "character": 24
        }
      },
      "rangeLength": 0,
      "text": "m"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 196,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 9,
          "character": 25
        },
        "end": {
          "line": 9,
          "character": 25
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "missing ',' before newline in argument list"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 25
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 7,
        "character": 2
      },
      "end": {
        "line": 7,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 9,
        "character": 22
      },
      "end": {
        "line": 9,
        "character": 25
      }
    },
    "kind": 1
  }
]
notify: textDocument/didChange {
  "textDocument": {
    "version": 197,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 25
        },
        "end": {
          "line": 9,
          "character": 25
        }
      },
      "rangeLength": 0,
      "text": ")"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 197,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 26
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 25
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 7,
        "character": 2
      },
      "end": {
        "line": 7,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 9,
        "character": 22
      },
      "end": {
        "line": 9,
        "character": 25
      }
    },
    "kind": 1
  }
]
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go",
    "languageId": "go",
    "version": 198,
    "text": "package hello\n\nimport \"fmt\"\n\nfunc main() {\n\tsum := 0\n\tfor i := 0; i < 10; i++ {\n\t\tsum += i\n\t}\n\tfmt.Println(\"sum: \", sum)\n}"
  }
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "text": "package hello\n\nimport \"fmt\"\n\nfunc main() {\n\tsum := 0\n\tfor i := 0; i < 10; i++ {\n\t\tsum += i\n\t}\n\tfmt.Println(\"sum: \", sum)\n}"
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 9,
    "character": 25
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 7,
        "character": 2
      },
      "end": {
        "line": 7,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 9,
        "character": 22
      },
      "end": {
        "line": 9,
        "character": 25
      }
    },
    "kind": 1
  }
]
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 198,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go",
    "languageId": "go",
    "version": 0,
    "text": "package hello\n\nimport \"fmt\"\n\nfunc main() {\n\tsum := 0\n\tfor i := 0; i < 10; i++ {\n\t\tsum += i\n\t}\n\tfmt.Println(\"sum: \", sum)\n}"
  }
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "text": "package hello\n\nimport \"fmt\"\n\nfunc main() {\n\tsum := 0\n\tfor i := 0; i < 10; i++ {\n\t\tsum += i\n\t}\n\tfmt.Println(\"sum: \", sum)\n}"
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 9
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 5
      },
      "end": {
        "line": 6,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 13
      },
      "end": {
        "line": 6,
        "character": 14
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 21
      },
      "end": {
        "line": 6,
        "character": 22
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 7,
        "character": 9
      },
      "end": {
        "line": 7,
        "character": 10
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 8,
    "character": 1
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 8,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 8,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  },
  "position": {
    "line": 17,
    "character": 0
  }
}
<- response: []
notify: textDocument/didClose {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/tcpServer2.go"
  }
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 8,
    "character": 1
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "go list",
      "message": "found packages hello (hello.go) and main (tcpClient.go) in /home/max/uni/golang/socket"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 7
        }
      },
      "severity": 1,
      "code": "MismatchedPkgName",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#MismatchedPkgName"
      },
      "source": "compiler",
      "message": "package main; expected hello"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 8,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 8,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 8,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 10,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 8,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 1
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 6,
        "character": 1
      },
      "end": {
        "line": 6,
        "character": 4
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 5
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 7,
        "character": 9
      },
      "end": {
        "line": 7,
        "character": 10
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 5
      },
      "end": {
        "line": 6,
        "character": 6
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 13
      },
      "end": {
        "line": 6,
        "character": 14
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 6,
        "character": 21
      },
      "end": {
        "line": 6,
        "character": 22
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 2
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 5,
        "character": 1
      },
      "end": {
        "line": 5,
        "character": 4
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 7,
        "character": 2
      },
      "end": {
        "line": 7,
        "character": 5
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 9,
        "character": 22
      },
      "end": {
        "line": 9,
        "character": 25
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 2,
    "character": 11
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 7
      },
      "end": {
        "line": 2,
        "character": 12
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 9,
        "character": 1
      },
      "end": {
        "line": 9,
        "character": 4
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 8
  }
}
<- response: [
  {
    "range": {
      "start": {
        "line": 0,
        "character": 8
      },
      "end": {
        "line": 0,
        "character": 13
      }
    },
    "kind": 1
  }
]
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 2
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 1
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 1,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 0
        }
      },
      "rangeLength": 14,
      "text": ""
    }
  ]
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:50:57 go/packages.Load #20\n\tsnapshot=209\n\tdirectory=file:///home/max/uni/golang/socket/\n\tquery=[./]\n\tpackages=1\n"
}
<- request: window/logMessage {
  "type": 3,
  "message": "2023/10/28 18:50:57 go/packages.Load #20: updating metadata for 1 packages\n"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 51,
          "character": 5
        },
        "end": {
          "line": 51,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 55,
          "character": 9
        },
        "end": {
          "line": 55,
          "character": 12
        }
      },
      "severity": 1,
      "code": "WrongArgCount",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount"
      },
      "source": "compiler",
      "message": "too many arguments in call to client\n\thave (string)\n\twant ()"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "server redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "handleServerConnection redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 53,
          "character": 5
        },
        "end": {
          "line": 53,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/test.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 5
        },
        "end": {
          "line": 7,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 1,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found 'import'"
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "server redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of server"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 34,
          "character": 5
        },
        "end": {
          "line": 34,
          "character": 27
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "handleServerConnection redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 34,
                "character": 5
              },
              "end": {
                "line": 34,
                "character": 27
              }
            }
          },
          "message": "other declaration of handleServerConnection"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 62,
          "character": 5
        },
        "end": {
          "line": 62,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
notify: textDocument/didChange {
  "textDocument": {
    "version": 1,
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 0
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 1,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found 'import'"
    }
  ]
}
notify: textDocument/didOpen {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go",
    "languageId": "go",
    "version": 2,
    "text": "import \"fmt\"\n\nfunc main() {\n\tsum := 0\n\tfor i := 0; i < 10; i++ {\n\t\tsum += i\n\t}\n\tfmt.Println(\"sum: \", sum)\n}"
  }
}
notify: textDocument/didSave {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "text": "import \"fmt\"\n\nfunc main() {\n\tsum := 0\n\tfor i := 0; i < 10; i++ {\n\t\tsum += i\n\t}\n\tfmt.Println(\"sum: \", sum)\n}"
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 0,
    "character": 0
  }
}
<- response: []
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 11
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "client redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 9,
                "character": 5
              },
              "end": {
                "line": 9,
                "character": 11
              }
            }
          },
          "message": "client redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 8,
                "character": 5
              },
              "end": {
                "line": 8,
                "character": 11
              }
            }
          },
          "message": "other declaration of client (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer.go",
            "range": {
              "start": {
                "line": 53,
                "character": 5
              },
              "end": {
                "line": 53,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpServer2.go",
            "range": {
              "start": {
                "line": 62,
                "character": 5
              },
              "end": {
                "line": 62,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/test.go",
            "range": {
              "start": {
                "line": 7,
                "character": 5
              },
              "end": {
                "line": 7,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    },
    {
      "range": {
        "start": {
          "line": 43,
          "character": 5
        },
        "end": {
          "line": 43,
          "character": 9
        }
      },
      "severity": 1,
      "code": "DuplicateDecl",
      "codeDescription": {
        "href": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#DuplicateDecl"
      },
      "source": "compiler",
      "message": "main redeclared in this block (see details)",
      "relatedInformation": [
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient2.go",
            "range": {
              "start": {
                "line": 51,
                "character": 5
              },
              "end": {
                "line": 51,
                "character": 9
              }
            }
          },
          "message": "main redeclared in this block"
        },
        {
          "location": {
            "uri": "file:///home/max/uni/golang/socket/tcpClient.go",
            "range": {
              "start": {
                "line": 43,
                "character": 5
              },
              "end": {
                "line": 43,
                "character": 9
              }
            }
          },
          "message": "other declaration of main (this error)"
        }
      ]
    }
  ]
}
<- request: textDocument/publishDiagnostics {
  "uri": "file:///home/max/uni/golang/socket/hello.go",
  "version": 2,
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 0,
          "character": 0
        }
      },
      "severity": 1,
      "source": "syntax",
      "message": "expected 'package', found 'import'"
    }
  ]
}
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 7,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
-> request: textDocument/documentHighlight {
  "textDocument": {
    "uri": "file:///home/max/uni/golang/socket/hello.go"
  },
  "position": {
    "line": 6,
    "character": 0
  }
}
<- response: []
